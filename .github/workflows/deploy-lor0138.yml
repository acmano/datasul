name: Deploy LOR0138 to Production

on:
  push:
    branches:
      - main
    paths:
      - 'lor0138/**'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production
    runs-on: self-hosted
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create release
        run: |
          RELEASE_DIR="/opt/lor0138/backend/releases/$(date +%Y-%m-%d_%H-%M-%S)"
          echo "RELEASE_DIR=$RELEASE_DIR" >> $GITHUB_ENV
          mkdir -p "$RELEASE_DIR"

      - name: Copy code
        run: |
          cp -a lor0138/. "$RELEASE_DIR/"
          cp /opt/lor0138/backend/shared/.env "$RELEASE_DIR/.env"

      - name: Create tsconfig.runtime.json
        run: |
          cat > "$RELEASE_DIR/tsconfig.runtime.json" << 'EOF'
          {
            "compilerOptions": {
              "baseUrl": "./dist",
              "paths": {
                "@api/*": ["api/*"],
                "@config/*": ["config/*"],
                "@infrastructure/*": ["infrastructure/*"],
                "@shared/*": ["shared/*"]
              }
            }
          }
          EOF

      - name: Create logs directory
        run: |
          mkdir -p "$RELEASE_DIR/logs"
          chmod 755 "$RELEASE_DIR/logs"

      - name: Build
        run: |
          cd "$RELEASE_DIR"
          npm install
          npm install tsconfig-paths
          npm run build

      - name: Deploy
        run: |
          ln -snf "$RELEASE_DIR" /opt/lor0138/backend/current
          cd /opt/lor0138/backend/shared
          pm2 reload ecosystem.config.js --update-env || pm2 start ecosystem.config.js
          sleep 10

      - name: Health check
        run: |
          for i in {1..10}; do
            response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3001/health)
            if [ $response -eq 200 ]; then
              echo "✅ Deploy successful!"
              exit 0
            fi
            echo "Tentativa $i/10: $response"
            sleep 2
          done
          
          echo "❌ Health check failed"
          pm2 logs lor0138-backend --lines 30 --nostream
          
          # Rollback
          PREVIOUS=$(ls -t /opt/lor0138/backend/releases | sed -n 2p)
          if [ -n "$PREVIOUS" ]; then
            ln -snf "/opt/lor0138/backend/releases/$PREVIOUS" /opt/lor0138/backend/current
            pm2 reload ecosystem.config.js --update-env
          fi
          exit 1

      - name: Cleanup
        run: |
          cd /opt/lor0138/backend/releases
          ls -t | tail -n +6 | xargs -r rm -rf
