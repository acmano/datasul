{"file":"/home/mano/projetos/datasul/lor0138/src/shared/middlewares/apiKeyAuth.middleware.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/src/shared/middlewares/apiKeyAuth.middleware.ts"],"sourcesContent":["// src/shared/middlewares/apiKeyAuth.middleware.ts\n\nimport { Request, Response, NextFunction } from 'express';\nimport { ApiKeyService } from '@shared/services/ApiKeyService';\nimport { AuthenticationError } from '@shared/errors';\nimport { log } from '@shared/utils/logger';\n\n/**\n * Middleware de autenticação por API Key\n * \n * Aceita API Key via:\n * - Header: X-API-Key\n * - Header: Authorization: Bearer <api-key>\n * - Query: ?api_key=<api-key>\n */\nexport async function apiKeyAuth(\n  req: Request,\n  res: Response,\n  next: NextFunction\n): Promise<void> {\n  try {\n    // Extrai API Key de múltiplas fontes\n    const apiKey = extractApiKey(req);\n\n    if (!apiKey) {\n      throw new AuthenticationError('API Key não fornecida. Forneça via header X-API-Key ou Authorization: Bearer <key>');\n    }\n\n    // Valida API Key\n    const keyConfig = await ApiKeyService.validateKey(apiKey);\n\n    if (!keyConfig) {\n      throw new AuthenticationError(`API Key inválida ou expirada: ${maskApiKey(apiKey)}`);\n    }\n\n    // Adiciona informações do usuário ao request\n    req.apiKey = keyConfig;\n    req.user = {\n      id: keyConfig.userId,\n      name: keyConfig.userName,\n      tier: keyConfig.tier\n    };\n\n    log.debug('Autenticação via API Key', {\n      correlationId: req.id,\n      userId: keyConfig.userId,\n      tier: keyConfig.tier,\n      apiKey: maskApiKey(apiKey)\n    });\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n}\n\n/**\n * Middleware de autenticação opcional\n * Se API Key fornecida, valida. Se não, continua sem autenticação.\n */\nexport async function optionalApiKeyAuth(\n  req: Request,\n  res: Response,\n  next: NextFunction\n): Promise<void> {\n  const apiKey = extractApiKey(req);\n\n  if (!apiKey) {\n    // Sem API Key, continua sem autenticação\n    return next();\n  }\n\n  try {\n    const keyConfig = await ApiKeyService.validateKey(apiKey);\n\n    if (keyConfig) {\n      req.apiKey = keyConfig;\n      req.user = {\n        id: keyConfig.userId,\n        name: keyConfig.userName,\n        tier: keyConfig.tier\n      };\n\n      log.debug('Autenticação opcional via API Key', {\n        correlationId: req.id,\n        userId: keyConfig.userId,\n        tier: keyConfig.tier\n      });\n    }\n\n    next();\n  } catch (error) {\n    // Ignora erros de autenticação no modo opcional\n    next();\n  }\n}\n\n/**\n * Extrai API Key do request\n */\nfunction extractApiKey(req: Request): string | null {\n  // 1. Header X-API-Key\n  const headerKey = req.headers['x-api-key'] as string;\n  if (headerKey) {\n    return headerKey;\n  }\n\n  // 2. Header Authorization: Bearer\n  const authHeader = req.headers['authorization'] as string;\n  if (authHeader && authHeader.startsWith('Bearer ')) {\n    return authHeader.substring(7);\n  }\n\n  // 3. Query parameter\n  const queryKey = req.query.api_key as string;\n  if (queryKey) {\n    return queryKey;\n  }\n\n  return null;\n}\n\n/**\n * Mascara API Key para logs\n */\nfunction maskApiKey(apiKey: string): string {\n  if (apiKey.length <= 8) {\n    return '***';\n  }\n  return `${apiKey.substring(0, 4)}...${apiKey.substring(apiKey.length - 4)}`;\n}"],"version":3}