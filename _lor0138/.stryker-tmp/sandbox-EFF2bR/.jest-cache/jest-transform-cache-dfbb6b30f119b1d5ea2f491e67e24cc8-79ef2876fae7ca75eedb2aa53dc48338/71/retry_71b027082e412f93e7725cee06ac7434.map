{"file":"/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-EFF2bR/src/shared/utils/retry.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-EFF2bR/src/shared/utils/retry.ts"],"sourcesContent":["// @ts-nocheck\n// src/shared/utils/retry.ts\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { log } from './logger';\nexport interface RetryOptions {\n  maxAttempts: number;\n  initialDelay: number; // ms\n  maxDelay: number; // ms\n  backoffFactor: number; // multiplicador para exponential backoff\n  jitter: boolean; // adiciona aleatoriedade para evitar thundering herd\n  onRetry?: (error: Error, attempt: number, nextDelay: number) => void;\n}\nconst DEFAULT_OPTIONS: RetryOptions = stryMutAct_9fa48(\"4192\") ? {} : (stryCov_9fa48(\"4192\"), {\n  maxAttempts: 3,\n  initialDelay: 1000,\n  maxDelay: 10000,\n  backoffFactor: 2,\n  jitter: stryMutAct_9fa48(\"4193\") ? false : (stryCov_9fa48(\"4193\"), true)\n});\n\n/**\n * Executa uma função com retry e exponential backoff\n * \n * @param fn Função async a ser executada\n * @param options Opções de retry\n * @param context Contexto para logs (ex: \"SQL Server EMP\")\n * @returns Resultado da função ou lança erro após todas as tentativas\n * \n * @example\n * ```typescript\n * const result = await retryWithBackoff(\n *   () => pool.connect(),\n *   { maxAttempts: 5, initialDelay: 1000 },\n *   'SQL Server Connection'\n * );\n * ```\n */\nexport async function retryWithBackoff<T>(fn: () => Promise<T>, options: Partial<RetryOptions> = {}, context: string = stryMutAct_9fa48(\"4194\") ? \"\" : (stryCov_9fa48(\"4194\"), 'Operation')): Promise<T> {\n  if (stryMutAct_9fa48(\"4195\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"4195\");\n    const opts = stryMutAct_9fa48(\"4196\") ? {} : (stryCov_9fa48(\"4196\"), {\n      ...DEFAULT_OPTIONS,\n      ...options\n    });\n    let lastError: Error | null = null;\n    let delay = opts.initialDelay;\n    for (let attempt = 1; stryMutAct_9fa48(\"4199\") ? attempt > opts.maxAttempts : stryMutAct_9fa48(\"4198\") ? attempt < opts.maxAttempts : stryMutAct_9fa48(\"4197\") ? false : (stryCov_9fa48(\"4197\", \"4198\", \"4199\"), attempt <= opts.maxAttempts); stryMutAct_9fa48(\"4200\") ? attempt-- : (stryCov_9fa48(\"4200\"), attempt++)) {\n      if (stryMutAct_9fa48(\"4201\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4201\");\n        try {\n          if (stryMutAct_9fa48(\"4202\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"4202\");\n            log.debug(stryMutAct_9fa48(\"4203\") ? `` : (stryCov_9fa48(\"4203\"), `${context}: Tentativa ${attempt}/${opts.maxAttempts}`), stryMutAct_9fa48(\"4204\") ? {} : (stryCov_9fa48(\"4204\"), {\n              attempt,\n              maxAttempts: opts.maxAttempts\n            }));\n            const result = await fn();\n            if (stryMutAct_9fa48(\"4208\") ? attempt <= 1 : stryMutAct_9fa48(\"4207\") ? attempt >= 1 : stryMutAct_9fa48(\"4206\") ? false : stryMutAct_9fa48(\"4205\") ? true : (stryCov_9fa48(\"4205\", \"4206\", \"4207\", \"4208\"), attempt > 1)) {\n              if (stryMutAct_9fa48(\"4209\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"4209\");\n                log.info(stryMutAct_9fa48(\"4210\") ? `` : (stryCov_9fa48(\"4210\"), `${context}: Sucesso na tentativa ${attempt}`), stryMutAct_9fa48(\"4211\") ? {} : (stryCov_9fa48(\"4211\"), {\n                  attempt\n                }));\n              }\n            }\n            return result;\n          }\n        } catch (error) {\n          if (stryMutAct_9fa48(\"4212\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"4212\");\n            lastError = error as Error;\n            if (stryMutAct_9fa48(\"4215\") ? attempt !== opts.maxAttempts : stryMutAct_9fa48(\"4214\") ? false : stryMutAct_9fa48(\"4213\") ? true : (stryCov_9fa48(\"4213\", \"4214\", \"4215\"), attempt === opts.maxAttempts)) {\n              if (stryMutAct_9fa48(\"4216\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"4216\");\n                log.error(stryMutAct_9fa48(\"4217\") ? `` : (stryCov_9fa48(\"4217\"), `${context}: Falhou após ${opts.maxAttempts} tentativas`), stryMutAct_9fa48(\"4218\") ? {} : (stryCov_9fa48(\"4218\"), {\n                  error: lastError.message,\n                  attempts: opts.maxAttempts\n                }));\n                throw lastError;\n              }\n            }\n\n            // Calcular próximo delay com exponential backoff\n            const nextDelay = calculateDelay(delay, opts);\n            log.warn(stryMutAct_9fa48(\"4219\") ? `` : (stryCov_9fa48(\"4219\"), `${context}: Tentativa ${attempt} falhou, retry em ${nextDelay}ms`), stryMutAct_9fa48(\"4220\") ? {} : (stryCov_9fa48(\"4220\"), {\n              attempt,\n              error: lastError.message,\n              nextDelay,\n              nextAttempt: stryMutAct_9fa48(\"4221\") ? attempt - 1 : (stryCov_9fa48(\"4221\"), attempt + 1)\n            }));\n\n            // Callback opcional\n            if (stryMutAct_9fa48(\"4223\") ? false : stryMutAct_9fa48(\"4222\") ? true : (stryCov_9fa48(\"4222\", \"4223\"), opts.onRetry)) {\n              if (stryMutAct_9fa48(\"4224\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"4224\");\n                opts.onRetry(lastError, attempt, nextDelay);\n              }\n            }\n\n            // Aguardar antes do próximo retry\n            await sleep(nextDelay);\n\n            // Atualizar delay para próxima iteração\n            delay = stryMutAct_9fa48(\"4225\") ? Math.max(delay * opts.backoffFactor, opts.maxDelay) : (stryCov_9fa48(\"4225\"), Math.min(stryMutAct_9fa48(\"4226\") ? delay / opts.backoffFactor : (stryCov_9fa48(\"4226\"), delay * opts.backoffFactor), opts.maxDelay));\n          }\n        }\n      }\n    }\n\n    // Nunca deve chegar aqui, mas TypeScript precisa\n    throw stryMutAct_9fa48(\"4229\") ? lastError && new Error(`${context}: Retry failed`) : stryMutAct_9fa48(\"4228\") ? false : stryMutAct_9fa48(\"4227\") ? true : (stryCov_9fa48(\"4227\", \"4228\", \"4229\"), lastError || new Error(stryMutAct_9fa48(\"4230\") ? `` : (stryCov_9fa48(\"4230\"), `${context}: Retry failed`)));\n  }\n}\n\n/**\n * Calcula delay com exponential backoff e jitter opcional\n */\nfunction calculateDelay(currentDelay: number, options: RetryOptions): number {\n  if (stryMutAct_9fa48(\"4231\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"4231\");\n    let nextDelay = currentDelay;\n\n    // Adicionar jitter (aleatoriedade) se habilitado\n    if (stryMutAct_9fa48(\"4233\") ? false : stryMutAct_9fa48(\"4232\") ? true : (stryCov_9fa48(\"4232\", \"4233\"), options.jitter)) {\n      if (stryMutAct_9fa48(\"4234\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4234\");\n        // Jitter entre 50% e 150% do delay\n        const jitterFactor = stryMutAct_9fa48(\"4235\") ? 0.5 - Math.random() : (stryCov_9fa48(\"4235\"), 0.5 + Math.random());\n        nextDelay = Math.floor(stryMutAct_9fa48(\"4236\") ? currentDelay / jitterFactor : (stryCov_9fa48(\"4236\"), currentDelay * jitterFactor));\n      }\n    }\n\n    // Garantir que não excede maxDelay\n    return stryMutAct_9fa48(\"4237\") ? Math.max(nextDelay, options.maxDelay) : (stryCov_9fa48(\"4237\"), Math.min(nextDelay, options.maxDelay));\n  }\n}\n\n/**\n * Helper para aguardar um tempo\n */\nfunction sleep(ms: number): Promise<void> {\n  if (stryMutAct_9fa48(\"4238\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"4238\");\n    return new Promise(stryMutAct_9fa48(\"4239\") ? () => undefined : (stryCov_9fa48(\"4239\"), resolve => setTimeout(resolve, ms)));\n  }\n}\n\n/**\n * Verifica se um erro é retryable (temporário)\n */\nexport function isRetryableError(error: Error): boolean {\n  if (stryMutAct_9fa48(\"4240\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"4240\");\n    const retryablePatterns = stryMutAct_9fa48(\"4241\") ? [] : (stryCov_9fa48(\"4241\"), [/ECONNREFUSED/i, /ETIMEDOUT/i, /ENOTFOUND/i, /EHOSTUNREACH/i, /ENETUNREACH/i, /timeout/i, stryMutAct_9fa48(\"4242\") ? /connection.closed/i : (stryCov_9fa48(\"4242\"), /connection.*closed/i), stryMutAct_9fa48(\"4243\") ? /connection.reset/i : (stryCov_9fa48(\"4243\"), /connection.*reset/i), /socket hang up/i]);\n    const errorMessage = stryMutAct_9fa48(\"4246\") ? error.message && '' : stryMutAct_9fa48(\"4245\") ? false : stryMutAct_9fa48(\"4244\") ? true : (stryCov_9fa48(\"4244\", \"4245\", \"4246\"), error.message || (stryMutAct_9fa48(\"4247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"4247\"), '')));\n    return stryMutAct_9fa48(\"4248\") ? retryablePatterns.every(pattern => pattern.test(errorMessage)) : (stryCov_9fa48(\"4248\"), retryablePatterns.some(stryMutAct_9fa48(\"4249\") ? () => undefined : (stryCov_9fa48(\"4249\"), pattern => pattern.test(errorMessage))));\n  }\n}\n\n/**\n * Retry apenas para erros retryable\n */\nexport async function retryOnRetryableError<T>(fn: () => Promise<T>, options: Partial<RetryOptions> = {}, context: string = stryMutAct_9fa48(\"4250\") ? \"\" : (stryCov_9fa48(\"4250\"), 'Operation')): Promise<T> {\n  if (stryMutAct_9fa48(\"4251\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"4251\");\n    return retryWithBackoff(fn, stryMutAct_9fa48(\"4252\") ? {} : (stryCov_9fa48(\"4252\"), {\n      ...options,\n      onRetry: (error, attempt, delay) => {\n        if (stryMutAct_9fa48(\"4253\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"4253\");\n          // Só retry se for erro retryable\n          if (stryMutAct_9fa48(\"4256\") ? false : stryMutAct_9fa48(\"4255\") ? true : stryMutAct_9fa48(\"4254\") ? isRetryableError(error) : (stryCov_9fa48(\"4254\", \"4255\", \"4256\"), !isRetryableError(error))) {\n            if (stryMutAct_9fa48(\"4257\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"4257\");\n              throw error; // Lança imediatamente se não for retryable\n            }\n          }\n          stryMutAct_9fa48(\"4258\") ? options.onRetry(error, attempt, delay) : (stryCov_9fa48(\"4258\"), options.onRetry?.(error, attempt, delay));\n        }\n      }\n    }), context);\n  }\n}"],"version":3}