{"file":"/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-N4zca8/src/api/lor0138/item/dadosCadastrais/informacoesGerais/service/informacoesGerais.service.ts","mappings":";AAAA,cAAc;AACd,8FAA8F;;;AAE9F,6FAA6F;AAC7F,8DAA+E;AAC/E,iDAA2C;AAE3C,MAAa,wBAAwB;IAEnC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,UAAkB;QAClD,IAAI,CAAC;YACH,uBAAuB;YACvB,MAAM,QAAQ,GAAG,MAAM,8DAA+B,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAEjF,0BAA0B;YAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,YAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;gBAChD,MAAM,IAAI,gCAAiB,CAAC,UAAU,CAAC,CAAC;YAC1C,CAAC;YAED,0BAA0B;YAC1B,MAAM,gBAAgB,GAAG,MAAM,8DAA+B,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;YAEnG,kBAAkB;YAClB,MAAM,QAAQ,GAAG;gBACf,uBAAuB,EAAE,QAAQ,CAAC,UAAU;gBAC5C,0BAA0B,EAAE,QAAQ,CAAC,aAAa;gBAClD,wBAAwB,EAAE,QAAQ,CAAC,WAAW;gBAC9C,kCAAkC,EAAE,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBACjE,UAAU,EAAE,KAAK,CAAC,UAAU;oBAC5B,WAAW,EAAE,KAAK,CAAC,WAAW;oBAC9B,SAAS,EAAE,KAAK,CAAC,SAAS;oBAC1B,WAAW,EAAE,KAAK,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7C,CAAC,CAAC;aACJ,CAAC;YAEF,OAAO,QAAQ,CAAC;QAElB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,qCAAqC;YACrC,IAAI,KAAK,YAAY,gCAAiB,EAAE,CAAC;gBACvC,MAAM,KAAK,CAAC;YACd,CAAC;YAED,oDAAoD;YACpD,YAAG,CAAC,KAAK,CAAC,mCAAmC,EAAE;gBAC7C,UAAU;gBACV,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB;aACpE,CAAC,CAAC;YAEH,MAAM,IAAI,4BAAa,CACrB,qCAAqC,EACrC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAC3C,CAAC;QACJ,CAAC;IACH,CAAC;CACF;AAjDD,4DAiDC","names":[],"sources":["/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-N4zca8/src/api/lor0138/item/dadosCadastrais/informacoesGerais/service/informacoesGerais.service.ts"],"sourcesContent":["// @ts-nocheck\n// src/api/lor0138/item/dadosCadastrais/informacoesGerais/service/informacoesGerais.service.ts\r\n\r\nimport { ItemInformacoesGeraisRepository } from '../repository/informacoesGerais.repository';\r\nimport { DatabaseError, ItemNotFoundError } from '@shared/errors/CustomErrors';\r\nimport { log } from '@shared/utils/logger';\r\n\r\nexport class InformacoesGeraisService {\r\n  \r\n  static async getInformacoesGerais(itemCodigo: string): Promise<any | null> {\r\n    try {\r\n      // Buscar dados do item\r\n      const itemData = await ItemInformacoesGeraisRepository.getItemMaster(itemCodigo);\r\n      \r\n      // Se não encontrou o item\r\n      if (!itemData) {\r\n        log.info('Item não encontrado', { itemCodigo });\r\n        throw new ItemNotFoundError(itemCodigo);\r\n      }\r\n\r\n      // Buscar estabelecimentos\r\n      const estabelecimentos = await ItemInformacoesGeraisRepository.getItemEstabelecimentos(itemCodigo);\r\n\r\n      // Montar resposta\r\n      const response = {\r\n        identificacaoItemCodigo: itemData.itemCodigo,\r\n        identificacaoItemDescricao: itemData.itemDescricao,\r\n        identificacaoItemUnidade: itemData.itemUnidade,\r\n        identificacaoItensEstabelecimentos: estabelecimentos.map(estab => ({\r\n          itemCodigo: estab.itemCodigo,\r\n          estabCodigo: estab.estabCodigo,\r\n          estabNome: estab.estabNome,\r\n          statusIndex: estab.codObsoleto === 0 ? 1 : 2,\r\n        })),\r\n      };\r\n\r\n      return response;\r\n      \r\n    } catch (error) {\r\n      // Se já é erro customizado, re-lança\r\n      if (error instanceof ItemNotFoundError) {\r\n        throw error;\r\n      }\r\n\r\n      // Se for erro de banco, converte para DatabaseError\r\n      log.error('Erro ao buscar informações gerais', {\r\n        itemCodigo,\r\n        error: error instanceof Error ? error.message : 'Erro desconhecido',\r\n      });\r\n\r\n      throw new DatabaseError(\r\n        'Falha ao buscar informações do item',\r\n        error instanceof Error ? error : undefined\r\n      );\r\n    }\r\n  }\r\n}"],"version":3}