8439e4f065e294b01afdc9163a0003c8
"use strict";
// src/api/lor0138/item/dadosCadastrais/informacoesGerais/routes/informacoesGerais.routes.ts
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const apiKeyAuth_middleware_1 = require("@shared/middlewares/apiKeyAuth.middleware");
const userRateLimit_middleware_1 = require("@shared/middlewares/userRateLimit.middleware");
const cachePresets_1 = require("@shared/middlewares/cachePresets");
const router = (0, express_1.Router)();
/**
 * @openapi
 * /api/lor0138/item/dadosCadastrais/informacoesGerais/{itemCodigo}:
 *   get:
 *     summary: Obter informações gerais de um item
 *     description: |
 *       Retorna dados cadastrais completos de um item do Datasul, incluindo:
 *       - Dados gerais (código, descrição, pesos)
 *       - Unidades de medida com fatores de conversão
 *       - Estabelecimentos onde o item está cadastrado
 *
 *       **Importante**: Os dados são consultados via Linked Server (OPENQUERY)
 *       do SQL Server para o Progress OpenEdge.
 *
 *       **Rate Limit**: 10 requisições por minuto para o mesmo item
 *     tags:
 *       - Item - Informações Gerais
 *     parameters:
 *       - in: path
 *         name: itemCodigo
 *         required: true
 *         schema:
 *           type: string
 *           pattern: '^[A-Za-z0-9]+$'
 *           minLength: 1
 *           maxLength: 16
 *         description: Código do item (alfanumérico, máx 16 caracteres)
 *         example: '7530110'
 *     responses:
 *       200:
 *         description: Informações do item retornadas com sucesso
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/InformacoesGerais'
 *             examples:
 *               sucesso:
 *                 summary: Item encontrado com múltiplos estabelecimentos
 *                 value:
 *                   dadosGerais:
 *                     codigo: '7530110'
 *                     descricao: 'VALVULA DE ESFERA 1/2" BRONZE'
 *                     unidadeMedida: 'UN'
 *                     pesoLiquido: 0.150
 *                     pesoBruto: 0.200
 *                   unidadesMedida:
 *                     - unidade: 'UN'
 *                       fatorConversao: 1.0
 *                       descricao: 'Unidade'
 *                     - unidade: 'CX'
 *                       fatorConversao: 12.0
 *                       descricao: 'Caixa com 12 unidades'
 *                   estabelecimentos:
 *                     - codigo: '01.01'
 *                       nome: 'CD São Paulo'
 *                       ativo: true
 *                       estoqueAtual: 1500.0
 *                       estoqueMinimo: 100.0
 *                       localEstoque: 'A-12-03'
 *                     - codigo: '02.01'
 *                       nome: 'Fábrica Joinville'
 *                       ativo: true
 *                       estoqueAtual: 3200.0
 *                       estoqueMinimo: 500.0
 *                       localEstoque: 'B-05-12'
 *               itemSemEstabelecimentos:
 *                 summary: Item sem estabelecimentos cadastrados
 *                 value:
 *                   dadosGerais:
 *                     codigo: '7530110'
 *                     descricao: 'VALVULA DE ESFERA 1/2" BRONZE'
 *                     unidadeMedida: 'UN'
 *                     pesoLiquido: 0.150
 *                     pesoBruto: 0.200
 *                   unidadesMedida:
 *                     - unidade: 'UN'
 *                       fatorConversao: 1.0
 *                       descricao: 'Unidade'
 *                   estabelecimentos: []
 *       400:
 *         $ref: '#/components/responses/BadRequest'
 *       404:
 *         $ref: '#/components/responses/NotFound'
 *       429:
 *         $ref: '#/components/responses/TooManyRequests'
 *       500:
 *         $ref: '#/components/responses/InternalError'
 *       504:
 *         description: Gateway Timeout - Requisição excedeu o tempo limite
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/Error'
 *             example:
 *               error: 'Timeout da requisição'
 *               details: 'A consulta ao banco de dados demorou mais de 30 segundos'
 */
router.get('/:itemCodigo', apiKeyAuth_middleware_1.optionalApiKeyAuth, // Autentica se tiver API Key
userRateLimit_middleware_1.userRateLimit, // Rate limit por usuário/tier
cachePresets_1.itemCache, // Cache HTTP
async (req, res, next) => {
    try {
        // ✅ CORRIGIDO: Nome correto do controller
        const { InformacoesGeraisController } = await Promise.resolve().then(() => __importStar(require('../controller/informacoesGerais.controller')));
        // ✅ CORRIGIDO: Passa req, res, next (3 parâmetros)
        await InformacoesGeraisController.getInformacoesGerais(req, res, next);
    }
    catch (error) {
        console.error('Erro ao carregar controller:', error);
        res.status(500).json({
            success: false,
            error: 'Erro interno ao processar requisição',
        });
    }
});
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,