{"file":"/home/mano/projetos/datasul/lor0138/src/shared/middlewares/userRateLimit.middleware.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/src/shared/middlewares/userRateLimit.middleware.ts"],"sourcesContent":["// src/shared/middlewares/userRateLimit.middleware.ts\n\nimport { Request, Response, NextFunction } from 'express';\nimport { UserRateLimiter } from '@shared/utils/UserRateLimiter';\nimport { RateLimitError } from '@shared/errors';\nimport { UserTier } from '@shared/types/apiKey.types';\nimport { log } from '@shared/utils/logger';\n\n/**\n * Middleware de rate limiting por usuário\n * Requer que apiKeyAuth middleware seja executado antes\n */\nexport function userRateLimit(\n  req: Request,\n  res: Response,\n  next: NextFunction\n): void {\n  try {\n    // Se não há usuário autenticado, aplica rate limit genérico por IP\n    if (!req.user) {\n      log.debug('Rate limit por IP (sem autenticação)', {\n        correlationId: req.id,\n        ip: req.ip\n      });\n      // Fallback para rate limit genérico\n      return next();\n    }\n\n    const { id: userId, tier } = req.user;\n\n    // Verifica rate limit\n    const result = UserRateLimiter.check(userId, tier);\n\n    // Adiciona headers de rate limit\n    res.setHeader('X-RateLimit-Limit', result.limit.toString());\n    res.setHeader('X-RateLimit-Remaining', result.remaining.toString());\n    res.setHeader('X-RateLimit-Reset', new Date(result.resetAt).toISOString());\n\n    if (!result.allowed) {\n      // Rate limit excedido\n      log.warn('Rate limit por usuário excedido', {\n        correlationId: req.id,\n        userId,\n        tier,\n        limit: result.limit,\n        resetAt: new Date(result.resetAt)\n      });\n\n      // Adiciona header Retry-After\n      if (result.retryAfter) {\n        res.setHeader('Retry-After', result.retryAfter.toString());\n      }\n\n      throw new RateLimitError(result.retryAfter);\n    }\n\n    log.debug('Rate limit OK', {\n      correlationId: req.id,\n      userId,\n      tier,\n      remaining: result.remaining,\n      limit: result.limit\n    });\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n}\n\n/**\n * Cria middleware de rate limit customizado para endpoints específicos\n */\nexport function createUserRateLimit(options?: {\n  skipAuthenticated?: boolean; // Pula rate limit se autenticado\n  multiplier?: number; // Multiplica os limites padrão\n}): (req: Request, res: Response, next: NextFunction) => void {\n  return (req: Request, res: Response, next: NextFunction) => {\n    try {\n      // Se configurado para pular autenticados e usuário está autenticado\n      if (options?.skipAuthenticated && req.user) {\n        return next();\n      }\n\n      if (!req.user) {\n        return next();\n      }\n\n      const { id: userId, tier } = req.user;\n      const result = UserRateLimiter.check(userId, tier);\n\n      // Aplica multiplicador se configurado\n      const limit = options?.multiplier \n        ? result.limit * options.multiplier \n        : result.limit;\n\n      res.setHeader('X-RateLimit-Limit', limit.toString());\n      res.setHeader('X-RateLimit-Remaining', result.remaining.toString());\n      res.setHeader('X-RateLimit-Reset', new Date(result.resetAt).toISOString());\n\n      if (!result.allowed) {\n        if (result.retryAfter) {\n          res.setHeader('Retry-After', result.retryAfter.toString());\n        }\n\n        throw new RateLimitError(result.retryAfter);\n      }\n\n      next();\n    } catch (error) {\n      next(error);\n    }\n  };\n}"],"version":3}