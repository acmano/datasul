{"file":"/home/mano/projetos/datasul/lor0138/src/shared/middlewares/cache.middleware.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/src/shared/middlewares/cache.middleware.ts"],"sourcesContent":["// src/shared/middlewares/cache.middleware.ts\n\nimport { Request, Response, NextFunction } from 'express';\nimport { CacheManager, generateCacheKey } from '@shared/utils/cacheManager';\nimport { log } from '@shared/utils/logger';\n\ninterface CacheOptions {\n  ttl?: number;\n  keyGenerator?: (req: Request) => string;\n  condition?: (req: Request, res: Response) => boolean;\n}\n\nexport function cacheMiddleware(options: CacheOptions = {}) {\n  const ttl = options.ttl || 300;\n\n  return async (req: Request, res: Response, next: NextFunction) => {\n    if (req.method !== 'GET') {\n      return next();\n    }\n\n    const cacheKey = options.keyGenerator \n      ? options.keyGenerator(req)\n      : generateDefaultCacheKey(req);\n\n    // ✅ CORRIGIDO: Adicionar await\n    const cachedResponse = await CacheManager.get<CachedResponse>(cacheKey);\n\n    if (cachedResponse) {\n      log.debug('Cache HTTP HIT', { \n        correlationId: req.id,\n        cacheKey,\n        url: req.url \n      });\n\n      res.setHeader('X-Cache', 'HIT');\n      res.setHeader('X-Cache-Key', cacheKey);\n\n      return res\n        .status(cachedResponse.statusCode)\n        .set(cachedResponse.headers)\n        .json(cachedResponse.body);\n    }\n\n    log.debug('Cache HTTP MISS', { \n      correlationId: req.id,\n      cacheKey,\n      url: req.url \n    });\n\n    const originalJson = res.json.bind(res);\n\n    res.json = function (body: any): Response {\n      const shouldCache = options.condition \n        ? options.condition(req, res)\n        : res.statusCode === 200;\n\n      if (shouldCache) {\n        const cachedResponse: CachedResponse = {\n          statusCode: res.statusCode,\n          headers: getRelevantHeaders(res),\n          body,\n        };\n\n        // ✅ CORRIGIDO: Adicionar await (mas como não é async, usar then)\n        CacheManager.set(cacheKey, cachedResponse, ttl)\n          .then(() => {\n            log.debug('Cache HTTP STORED', {\n              correlationId: req.id,\n              cacheKey,\n              ttl,\n              statusCode: res.statusCode,\n            });\n          })\n          .catch(err => {\n            log.error('Erro ao armazenar cache', { error: err });\n          });\n      }\n\n      res.setHeader('X-Cache', 'MISS');\n      res.setHeader('X-Cache-Key', cacheKey);\n\n      return originalJson(body);\n    };\n\n    next();\n  };\n}\n\nfunction generateDefaultCacheKey(req: Request): string {\n  const { method, path, query } = req;\n  \n  const sortedQuery = Object.keys(query)\n    .sort()\n    .map(key => `${key}=${query[key]}`)\n    .join('&');\n\n  const parts = [method, path];\n  if (sortedQuery) {\n    parts.push(sortedQuery);\n  }\n\n  return generateCacheKey(...parts);\n}\n\nfunction getRelevantHeaders(res: Response): Record<string, string> {\n  const relevantHeaders: Record<string, string> = {};\n  \n  const headersToPreserve = [\n    'content-type',\n    'content-encoding',\n    'x-correlation-id',\n  ];\n\n  headersToPreserve.forEach(header => {\n    const value = res.getHeader(header);\n    if (value) {\n      relevantHeaders[header] = String(value);\n    }\n  });\n\n  return relevantHeaders;\n}\n\ninterface CachedResponse {\n  statusCode: number;\n  headers: Record<string, string>;\n  body: any;\n}\n\nexport function invalidateCacheMiddleware(\n  pattern: string | ((req: Request) => string)\n) {\n  return (req: Request, res: Response, next: NextFunction) => {\n    res.on('finish', async () => {\n      if (res.statusCode >= 200 && res.statusCode < 300) {\n        const cachePattern = typeof pattern === 'function' \n          ? pattern(req) \n          : pattern;\n\n        // ✅ CORRIGIDO: Adicionar await\n        const removed = await CacheManager.invalidate(cachePattern);\n\n        if (removed > 0) {\n          log.info('Cache invalidado por mutation', {\n            correlationId: req.id,\n            pattern: cachePattern,\n            removed,\n            method: req.method,\n            url: req.url,\n          });\n        }\n      }\n    });\n\n    next();\n  };\n}"],"version":3}