{"file":"/home/mano/projetos/datasul/lor0138/src/shared/middlewares/errorHandler.middleware.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/src/shared/middlewares/errorHandler.middleware.ts"],"sourcesContent":["// src/shared/middlewares/errorHandler.middleware.ts\n\nimport { Request, Response, NextFunction } from 'express';\nimport { AppError } from '@shared/errors/AppError';\nimport { log } from '../utils/logger';\n\n/**\n * Sanitiza mensagem de erro (mantido do seu código)\n */\nfunction sanitizeErrorMessage(error: any): string {\n  const message = error.message || 'Erro desconhecido';\n  \n  let sanitized = message.replace(/\\/[^\\s]+\\.(ts|js|tsx|jsx)/gi, '[arquivo]');\n  sanitized = sanitized.replace(/SELECT\\s+.*?FROM/gi, 'consulta SQL');\n  sanitized = sanitized.replace(/INSERT\\s+INTO/gi, 'operação de inserção');\n  sanitized = sanitized.replace(/UPDATE\\s+.*?SET/gi, 'operação de atualização');\n  sanitized = sanitized.replace(/\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d+)?/g, '[servidor]');\n  sanitized = sanitized.replace(/user=\\w+/gi, 'user=[oculto]');\n  sanitized = sanitized.replace(/password=\\w+/gi, 'password=[oculto]');\n  \n  return sanitized;\n}\n\n/**\n * Middleware global de tratamento de erros\n */\nexport function errorHandler(\n  err: Error | AppError,\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  if (res.headersSent) {\n    return next(err);\n  }\n\n  const statusCode = err instanceof AppError ? err.statusCode : 500;\n  const isOperational = err instanceof AppError ? err.isOperational : false;\n  const context = err instanceof AppError ? err.context : undefined;\n\n  // Log baseado no tipo\n  if (isOperational) {\n    log.warn('Erro operacional', {\n      requestId: req.requestId,\n      method: req.method,\n      url: req.originalUrl,\n      statusCode,\n      message: err.message,\n      context,\n    });\n  } else {\n    log.error('Erro não operacional', {\n      requestId: req.requestId,\n      method: req.method,\n      url: req.originalUrl,\n      error: err.message,\n      stack: err.stack,\n    });\n  }\n\n  const isDevelopment = process.env.NODE_ENV === 'development';\n\n  if (isDevelopment) {\n    return res.status(statusCode).json({\n      error: err.name || 'Error',\n      message: err.message,\n      timestamp: new Date().toISOString(),\n      path: req.originalUrl,\n      requestId: req.requestId,\n      context,\n      stack: err.stack?.split('\\n').slice(0, 5),\n    });\n  }\n\n  // Produção: sanitiza mensagem\n  const userMessage = isOperational\n    ? sanitizeErrorMessage(err)\n    : 'Erro interno do servidor. Tente novamente mais tarde.';\n\n  res.status(statusCode).json({\n    error: err.name || 'Error',\n    message: userMessage,\n    timestamp: new Date().toISOString(),\n    path: req.originalUrl,\n    requestId: req.requestId,\n  });\n}\n\n/**\n * 404 - Rota não encontrada\n */\nexport function notFoundHandler(req: Request, res: Response, next: NextFunction) {\n  const error = new AppError(\n    404,\n    `Rota não encontrada: ${req.method} ${req.originalUrl}`,\n    true,\n    { method: req.method, path: req.originalUrl }\n  );\n  next(error);\n}\n\n/**\n * asyncHandler (mantido do seu código)\n */\nexport function asyncHandler(fn: Function) {\n  return (req: Request, res: Response, next: NextFunction) => {\n    Promise.resolve(fn(req, res, next)).catch(next);\n  };\n}"],"version":3}