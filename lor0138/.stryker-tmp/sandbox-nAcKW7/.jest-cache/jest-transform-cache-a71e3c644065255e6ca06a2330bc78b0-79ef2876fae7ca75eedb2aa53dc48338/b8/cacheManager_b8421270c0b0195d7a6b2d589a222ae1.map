{"file":"/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-nAcKW7/src/shared/utils/cacheManager.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-nAcKW7/src/shared/utils/cacheManager.ts"],"sourcesContent":["// @ts-nocheck\n// src/shared/utils/cacheManager.ts\n// ✅ VERSÃO ATUALIZADA: Suporta Memory, Redis e Layered (L1+L2)\n\nimport { CacheAdapter } from './cache/CacheAdapter';\nimport { MemoryCacheAdapter } from './cache/MemoryCacheAdapter';\nimport { RedisCacheAdapter } from './cache/RedisCacheAdapter';\nimport { LayeredCacheAdapter } from './cache/LayeredCacheAdapter';\nimport { log } from './logger';\nimport { appConfig } from '@config/app.config';\n\n/**\n * Gerenciador de cache com suporte a múltiplos backends\n * - Memory: Cache local (padrão)\n * - Redis: Cache compartilhado\n * - Layered: L1 (memory) + L2 (Redis)\n */\nexport class CacheManager {\n  private static adapter: CacheAdapter;\n  private static strategy: string = 'memory';\n  private static enabled: boolean = true;\n\n  /**\n   * Inicializa o cache com a estratégia escolhida\n   */\n  static initialize(strategy?: string): void {\n    this.enabled = process.env.CACHE_ENABLED !== 'false';\n    this.strategy = strategy || process.env.CACHE_STRATEGY || 'memory';\n\n    if (!this.enabled) {\n      log.warn('❌ Cache desabilitado (CACHE_ENABLED=false)');\n      return;\n    }\n\n    const ttl = parseInt(process.env.CACHE_DEFAULT_TTL || '300', 10);\n\n    try {\n      switch (this.strategy) {\n        case 'layered':\n          this.initializeLayered(ttl);\n          break;\n\n        case 'redis':\n          this.initializeRedis(ttl);\n          break;\n\n        case 'memory':\n        default:\n          this.initializeMemory(ttl);\n          break;\n      }\n\n      log.info('✅ Cache inicializado', {\n        strategy: this.strategy,\n        enabled: this.enabled,\n        ttl\n      });\n    } catch (error) {\n      log.error('❌ Erro ao inicializar cache', { strategy: this.strategy, error });\n      // Fallback para memória em caso de erro\n      this.initializeMemory(ttl);\n    }\n  }\n\n  private static initializeMemory(ttl: number): void {\n    this.adapter = new MemoryCacheAdapter(ttl, 'Cache-Memory');\n    this.strategy = 'memory';\n  }\n\n  private static initializeRedis(ttl: number): void {\n    const redisUrl = process.env.CACHE_REDIS_URL || 'redis://lor0138.lorenzetti.ibe:6379';\n    this.adapter = new RedisCacheAdapter(redisUrl, 'Cache-Redis');\n    this.strategy = 'redis';\n  }\n\n  private static initializeLayered(ttl: number): void {\n    const redisUrl = process.env.CACHE_REDIS_URL || 'redis://lor0138.lorenzetti.ibe:6379';\n\n    const l1 = new MemoryCacheAdapter(ttl, 'L1-Memory');\n    const l2 = new RedisCacheAdapter(redisUrl, 'L2-Redis');\n\n    this.adapter = new LayeredCacheAdapter(l1, l2, 'Cache-Layered');\n    this.strategy = 'layered';\n  }\n\n  /**\n   * Retorna instância singleton (compatibilidade)\n   */\n  static getInstance(): CacheManager {\n    if (!this.adapter) {\n      this.initialize();\n    }\n    return this;\n  }\n\n  /**\n   * Busca valor no cache\n   */\n  static async get<T>(key: string): Promise<T | undefined> {\n    if (!this.enabled || !this.adapter) {\n      return undefined;\n    }\n\n    try {\n      return await this.adapter.get<T>(key);\n    } catch (error) {\n      log.error('Cache GET error', { key, error });\n      return undefined;\n    }\n  }\n\n  /**\n   * Armazena valor no cache\n   */\n  static async set<T>(key: string, value: T, ttl?: number): Promise<boolean> {\n    if (!this.enabled || !this.adapter) {\n      return false;\n    }\n\n    try {\n      return await this.adapter.set(key, value, ttl);\n    } catch (error) {\n      log.error('Cache SET error', { key, error });\n      return false;\n    }\n  }\n\n  /**\n   * Remove valor do cache\n   */\n  static async delete(key: string): Promise<number> {\n    if (!this.enabled || !this.adapter) {\n      return 0;\n    }\n\n    try {\n      return await this.adapter.delete(key);\n    } catch (error) {\n      log.error('Cache DELETE error', { key, error });\n      return 0;\n    }\n  }\n\n  /**\n   * Limpa todo o cache\n   */\n  static async flush(): Promise<void> {\n    if (!this.enabled || !this.adapter) {\n      return;\n    }\n\n    try {\n      await this.adapter.flush();\n      log.info('Cache limpo completamente');\n    } catch (error) {\n      log.error('Cache FLUSH error', { error });\n    }\n  }\n\n  /**\n   * Lista chaves em cache\n   */\n  static async keys(pattern?: string): Promise<string[]> {\n    if (!this.enabled || !this.adapter) {\n      return [];\n    }\n\n    try {\n      return await this.adapter.keys(pattern);\n    } catch (error) {\n      log.error('Cache KEYS error', { pattern, error });\n      return [];\n    }\n  }\n\n  /**\n   * Invalida chaves por padrão (wildcards)\n   */\n  static async invalidate(pattern: string): Promise<number> {\n    if (!this.enabled || !this.adapter) {\n      return 0;\n    }\n\n    try {\n      const keys = await this.adapter.keys(pattern);\n\n      if (keys.length === 0) {\n        log.debug('Nenhuma chave encontrada para invalidar', { pattern });\n        return 0;\n      }\n\n      const deletePromises = keys.map(key => this.adapter.delete(key));\n      const results = await Promise.all(deletePromises);\n      const total = results.reduce((sum, count) => sum + count, 0);\n\n      log.info('Cache invalidado', { pattern, keys: total });\n      return total;\n    } catch (error) {\n      log.error('Cache INVALIDATE error', { pattern, error });\n      return 0;\n    }\n  }\n\n  /**\n   * Cache-aside pattern: busca ou executa função\n   */\n  static async getOrSet<T>(\n    key: string,\n    fetchFn: () => Promise<T>,\n    ttl?: number\n  ): Promise<T> {\n    // Tenta buscar do cache\n    const cached = await this.get<T>(key);\n    if (cached !== undefined) {\n      return cached;\n    }\n\n    // Executa função para buscar dados\n    const value = await fetchFn();\n\n    // Armazena no cache\n    await this.set(key, value, ttl);\n\n    return value;\n  }\n\n  /**\n   * Verifica se cache está pronto\n   */\n  static async isReady(): Promise<boolean> {\n    if (!this.enabled || !this.adapter) {\n      return false;\n    }\n\n    try {\n      return await this.adapter.isReady();\n    } catch (error) {\n      log.error('Cache isReady error', { error });\n      return false;\n    }\n  }\n\n  /**\n   * Retorna estatísticas do cache\n   */\n  static getStats(): any {\n    if (!this.enabled || !this.adapter) {\n      return {\n        enabled: false,\n        strategy: 'none'\n      };\n    }\n\n    // LayeredCacheAdapter tem método getStats()\n    if (this.adapter instanceof LayeredCacheAdapter) {\n      return {\n        enabled: true,\n        strategy: this.strategy,\n        ...this.adapter.getStats()\n      };\n    }\n\n    // MemoryCacheAdapter tem método getStats()\n    if (this.adapter instanceof MemoryCacheAdapter) {\n      return {\n        enabled: true,\n        strategy: this.strategy,\n        ...this.adapter.getStats()\n      };\n    }\n\n    return {\n      enabled: true,\n      strategy: this.strategy\n    };\n  }\n\n  /**\n   * Fecha conexões (chamado no graceful shutdown)\n   */\n  static async close(): Promise<void> {\n    if (!this.adapter) {\n      return;\n    }\n\n    try {\n      await this.adapter.close();\n      log.info('Cache fechado');\n    } catch (error) {\n      log.error('Cache CLOSE error', { error });\n    }\n  }\n}\n\n/**\n * Gera chave de cache consistente\n */\nexport function generateCacheKey(...parts: (string | number)[]): string {\n  return parts.filter(p => p !== undefined && p !== null).join(':');\n}\n\n/**\n * Decorator para cachear métodos de classe\n * @example\n * class MyService {\n *   @Cacheable({ ttl: 600, keyPrefix: 'service' })\n *   async getData(id: string) { ... }\n * }\n */\nexport function Cacheable(options: { ttl?: number; keyPrefix?: string } = {}) {\n  return function (\n    target: any,\n    propertyKey: string,\n    descriptor: PropertyDescriptor\n  ) {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = async function (...args: any[]) {\n      const keyPrefix = options.keyPrefix || target.constructor.name;\n      const cacheKey = generateCacheKey(keyPrefix, propertyKey, ...args);\n\n      return CacheManager.getOrSet(\n        cacheKey,\n        () => originalMethod.apply(this, args),\n        options.ttl\n      );\n    };\n\n    return descriptor;\n  };\n}"],"version":3}