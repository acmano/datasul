{"file":"/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-EFF2bR/src/infrastructure/database/DatabaseManager.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-EFF2bR/src/infrastructure/database/DatabaseManager.ts"],"sourcesContent":["// @ts-nocheck\n// src/infrastructure/database/DatabaseManager.ts\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { ConnectionType, ConnectionStatus, IConnection, QueryParameter } from './types';\nimport { SqlServerConnection } from './connections/SqlServerConnection';\nimport { OdbcConnection } from './connections/OdbcConnection';\nimport { MockConnection } from './connections/MockConnection';\nimport { getSqlServerConfigEmp, getSqlServerConfigMult } from './config/sqlServerConfig';\nimport { getOdbcConnectionString } from './config/odbcConfig';\n// ✅ NOVO: Import do helper de métricas\nimport { DatabaseMetricsHelper } from '@infrastructure/metrics/helpers/databaseMetrics';\nexport class DatabaseManager {\n  private static instance: DatabaseManager | null = null;\n  private static connectionEmp: IConnection | null = null;\n  private static connectionMult: IConnection | null = null;\n  private static connectionType: ConnectionType = stryMutAct_9fa48(\"1236\") ? \"\" : (stryCov_9fa48(\"1236\"), 'odbc');\n  private static useMockData: boolean = stryMutAct_9fa48(\"1237\") ? true : (stryCov_9fa48(\"1237\"), false);\n  private static connectionError: string | null = null;\n  private static isInitialized: boolean = stryMutAct_9fa48(\"1238\") ? true : (stryCov_9fa48(\"1238\"), false);\n  private static initializationPromise: Promise<void> | null = null;\n\n  // Construtor privado para padrão Singleton\n  private constructor() {}\n\n  /**\r\n   * ✅ NOVO: Retorna instância singleton\r\n   * Usado pelo health check no app.ts\r\n   */\n  static getInstance(): DatabaseManager {\n    if (stryMutAct_9fa48(\"1239\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1239\");\n      if (stryMutAct_9fa48(\"1242\") ? false : stryMutAct_9fa48(\"1241\") ? true : stryMutAct_9fa48(\"1240\") ? this.instance : (stryCov_9fa48(\"1240\", \"1241\", \"1242\"), !this.instance)) {\n        if (stryMutAct_9fa48(\"1243\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1243\");\n          this.instance = new DatabaseManager();\n        }\n      }\n      return this.instance;\n    }\n  }\n\n  /**\r\n   * ✅ NOVO: Retorna a conexão primária (EMP)\r\n   * Usado pelo health check no app.ts\r\n   */\n  static getConnection(): IConnection {\n    if (stryMutAct_9fa48(\"1244\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1244\");\n      if (stryMutAct_9fa48(\"1246\") ? false : stryMutAct_9fa48(\"1245\") ? true : (stryCov_9fa48(\"1245\", \"1246\"), this.useMockData)) {\n        if (stryMutAct_9fa48(\"1247\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1247\");\n          return this.getMockConnection();\n        }\n      }\n      if (stryMutAct_9fa48(\"1250\") ? false : stryMutAct_9fa48(\"1249\") ? true : stryMutAct_9fa48(\"1248\") ? this.connectionEmp : (stryCov_9fa48(\"1248\", \"1249\", \"1250\"), !this.connectionEmp)) {\n        if (stryMutAct_9fa48(\"1251\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1251\");\n          throw new Error(stryMutAct_9fa48(\"1252\") ? \"\" : (stryCov_9fa48(\"1252\"), 'Conexão EMP não inicializada'));\n        }\n      }\n      return this.connectionEmp;\n    }\n  }\n  static async initialize(): Promise<void> {\n    if (stryMutAct_9fa48(\"1253\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1253\");\n      if (stryMutAct_9fa48(\"1255\") ? false : stryMutAct_9fa48(\"1254\") ? true : (stryCov_9fa48(\"1254\", \"1255\"), this.initializationPromise)) {\n        if (stryMutAct_9fa48(\"1256\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1256\");\n          return this.initializationPromise;\n        }\n      }\n      if (stryMutAct_9fa48(\"1258\") ? false : stryMutAct_9fa48(\"1257\") ? true : (stryCov_9fa48(\"1257\", \"1258\"), this.isInitialized)) {\n        if (stryMutAct_9fa48(\"1259\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1259\");\n          return Promise.resolve();\n        }\n      }\n      this.initializationPromise = this.doInitialize();\n      try {\n        if (stryMutAct_9fa48(\"1260\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1260\");\n          await this.initializationPromise;\n        }\n      } finally {\n        if (stryMutAct_9fa48(\"1261\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1261\");\n          this.initializationPromise = null;\n        }\n      }\n    }\n  }\n  private static async doInitialize(): Promise<void> {\n    if (stryMutAct_9fa48(\"1262\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1262\");\n      console.log(stryMutAct_9fa48(\"1263\") ? \"\" : (stryCov_9fa48(\"1263\"), 'Inicializando conexoes Datasul...'));\n      this.connectionType = stryMutAct_9fa48(\"1266\") ? process.env.DB_CONNECTION_TYPE as ConnectionType && 'odbc' : stryMutAct_9fa48(\"1265\") ? false : stryMutAct_9fa48(\"1264\") ? true : (stryCov_9fa48(\"1264\", \"1265\", \"1266\"), process.env.DB_CONNECTION_TYPE as ConnectionType || (stryMutAct_9fa48(\"1267\") ? \"\" : (stryCov_9fa48(\"1267\"), 'odbc')));\n      console.log(stryMutAct_9fa48(\"1268\") ? `` : (stryCov_9fa48(\"1268\"), `Modo: ${stryMutAct_9fa48(\"1269\") ? this.connectionType.toLowerCase() : (stryCov_9fa48(\"1269\"), this.connectionType.toUpperCase())}`));\n      try {\n        if (stryMutAct_9fa48(\"1270\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1270\");\n          if (stryMutAct_9fa48(\"1273\") ? this.connectionType !== 'odbc' : stryMutAct_9fa48(\"1272\") ? false : stryMutAct_9fa48(\"1271\") ? true : (stryCov_9fa48(\"1271\", \"1272\", \"1273\"), this.connectionType === (stryMutAct_9fa48(\"1274\") ? \"\" : (stryCov_9fa48(\"1274\"), 'odbc')))) {\n            if (stryMutAct_9fa48(\"1275\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"1275\");\n              await this.initializeOdbc();\n            }\n          } else {\n            if (stryMutAct_9fa48(\"1276\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"1276\");\n              await this.initializeSqlServer();\n            }\n          }\n          this.useMockData = stryMutAct_9fa48(\"1277\") ? true : (stryCov_9fa48(\"1277\"), false);\n          this.isInitialized = stryMutAct_9fa48(\"1278\") ? false : (stryCov_9fa48(\"1278\"), true);\n\n          // ✅ NOVO: Registrar métricas de conexão bem-sucedida\n          DatabaseMetricsHelper.setActiveConnections(stryMutAct_9fa48(\"1279\") ? \"\" : (stryCov_9fa48(\"1279\"), 'EMP'), 1);\n          DatabaseMetricsHelper.setActiveConnections(stryMutAct_9fa48(\"1280\") ? \"\" : (stryCov_9fa48(\"1280\"), 'MULT'), 1);\n          console.log(stryMutAct_9fa48(\"1281\") ? \"\" : (stryCov_9fa48(\"1281\"), '✅ CONECTADO AO DATASUL'));\n        }\n      } catch (error) {\n        if (stryMutAct_9fa48(\"1282\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1282\");\n          this.connectionError = (error as Error).message;\n          this.useMockData = stryMutAct_9fa48(\"1283\") ? false : (stryCov_9fa48(\"1283\"), true);\n          this.isInitialized = stryMutAct_9fa48(\"1284\") ? false : (stryCov_9fa48(\"1284\"), true);\n\n          // ✅ NOVO: Registrar erro de conexão nas métricas\n          DatabaseMetricsHelper.recordConnectionError(stryMutAct_9fa48(\"1285\") ? \"\" : (stryCov_9fa48(\"1285\"), 'EMP'), error);\n          DatabaseMetricsHelper.recordConnectionError(stryMutAct_9fa48(\"1286\") ? \"\" : (stryCov_9fa48(\"1286\"), 'MULT'), error);\n          console.warn(stryMutAct_9fa48(\"1287\") ? \"\" : (stryCov_9fa48(\"1287\"), '⚠️ USANDO DADOS MOCK'));\n          console.error(stryMutAct_9fa48(\"1288\") ? \"\" : (stryCov_9fa48(\"1288\"), 'Erro conexão:'), this.connectionError);\n        }\n      }\n    }\n  }\n  private static async initializeSqlServer(): Promise<void> {\n    if (stryMutAct_9fa48(\"1289\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1289\");\n      const configEmp = getSqlServerConfigEmp();\n      const configMult = getSqlServerConfigMult();\n      this.connectionEmp = new SqlServerConnection(configEmp, stryMutAct_9fa48(\"1290\") ? \"\" : (stryCov_9fa48(\"1290\"), 'EMP'));\n      this.connectionMult = new SqlServerConnection(configMult, stryMutAct_9fa48(\"1291\") ? \"\" : (stryCov_9fa48(\"1291\"), 'MULT'));\n      await Promise.all(stryMutAct_9fa48(\"1292\") ? [] : (stryCov_9fa48(\"1292\"), [this.connectionEmp.connect(), this.connectionMult.connect()]));\n      console.log(stryMutAct_9fa48(\"1293\") ? \"\" : (stryCov_9fa48(\"1293\"), '✅ SQL Server conectado'));\n    }\n  }\n  private static async initializeOdbc(): Promise<void> {\n    if (stryMutAct_9fa48(\"1294\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1294\");\n      const connStringEmp = getOdbcConnectionString(stryMutAct_9fa48(\"1295\") ? \"\" : (stryCov_9fa48(\"1295\"), 'EMP'));\n      const connStringMult = getOdbcConnectionString(stryMutAct_9fa48(\"1296\") ? \"\" : (stryCov_9fa48(\"1296\"), 'MULT'));\n      this.connectionEmp = new OdbcConnection(connStringEmp, stryMutAct_9fa48(\"1297\") ? \"\" : (stryCov_9fa48(\"1297\"), 'EMP'));\n      this.connectionMult = new OdbcConnection(connStringMult, stryMutAct_9fa48(\"1298\") ? \"\" : (stryCov_9fa48(\"1298\"), 'MULT'));\n      await Promise.all(stryMutAct_9fa48(\"1299\") ? [] : (stryCov_9fa48(\"1299\"), [this.connectionEmp.connect(), this.connectionMult.connect()]));\n      console.log(stryMutAct_9fa48(\"1300\") ? \"\" : (stryCov_9fa48(\"1300\"), '✅ ODBC conectado'));\n    }\n  }\n\n  /**\r\n   * Query simples EMP (DEPRECATED - Use queryEmpWithParams quando possível)\r\n   * ✅ COM MÉTRICAS\r\n   */\n  static async queryEmp(sql: string): Promise<any> {\n    if (stryMutAct_9fa48(\"1301\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1301\");\n      if (stryMutAct_9fa48(\"1303\") ? false : stryMutAct_9fa48(\"1302\") ? true : (stryCov_9fa48(\"1302\", \"1303\"), this.useMockData)) {\n        if (stryMutAct_9fa48(\"1304\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1304\");\n          return this.getMockConnection().query(sql);\n        }\n      }\n      if (stryMutAct_9fa48(\"1307\") ? false : stryMutAct_9fa48(\"1306\") ? true : stryMutAct_9fa48(\"1305\") ? this.connectionEmp : (stryCov_9fa48(\"1305\", \"1306\", \"1307\"), !this.connectionEmp)) {\n        if (stryMutAct_9fa48(\"1308\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1308\");\n          throw new Error(stryMutAct_9fa48(\"1309\") ? \"\" : (stryCov_9fa48(\"1309\"), 'Conexão EMP não inicializada'));\n        }\n      }\n\n      // ✅ NOVO: Instrumentar com métricas\n      return DatabaseMetricsHelper.instrumentQuery(stryMutAct_9fa48(\"1310\") ? \"\" : (stryCov_9fa48(\"1310\"), 'EMP'), sql, stryMutAct_9fa48(\"1311\") ? () => undefined : (stryCov_9fa48(\"1311\"), () => this.connectionEmp!.query(sql)));\n    }\n  }\n\n  /**\r\n   * Query simples MULT (DEPRECATED - Use queryMultWithParams quando possível)\r\n   * ✅ COM MÉTRICAS\r\n   */\n  static async queryMult(sql: string): Promise<any> {\n    if (stryMutAct_9fa48(\"1312\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1312\");\n      if (stryMutAct_9fa48(\"1314\") ? false : stryMutAct_9fa48(\"1313\") ? true : (stryCov_9fa48(\"1313\", \"1314\"), this.useMockData)) {\n        if (stryMutAct_9fa48(\"1315\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1315\");\n          return this.getMockConnection().query(sql);\n        }\n      }\n      if (stryMutAct_9fa48(\"1318\") ? false : stryMutAct_9fa48(\"1317\") ? true : stryMutAct_9fa48(\"1316\") ? this.connectionMult : (stryCov_9fa48(\"1316\", \"1317\", \"1318\"), !this.connectionMult)) {\n        if (stryMutAct_9fa48(\"1319\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1319\");\n          throw new Error(stryMutAct_9fa48(\"1320\") ? \"\" : (stryCov_9fa48(\"1320\"), 'Conexão MULT não inicializada'));\n        }\n      }\n\n      // ✅ NOVO: Instrumentar com métricas\n      return DatabaseMetricsHelper.instrumentQuery(stryMutAct_9fa48(\"1321\") ? \"\" : (stryCov_9fa48(\"1321\"), 'MULT'), sql, stryMutAct_9fa48(\"1322\") ? () => undefined : (stryCov_9fa48(\"1322\"), () => this.connectionMult!.query(sql)));\n    }\n  }\n\n  /**\r\n   * Query parametrizada EMP (✅ PROTEGIDO contra SQL Injection)\r\n   * ✅ COM MÉTRICAS\r\n   */\n  static async queryEmpWithParams(sql: string, params: QueryParameter[]): Promise<any> {\n    if (stryMutAct_9fa48(\"1323\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1323\");\n      if (stryMutAct_9fa48(\"1325\") ? false : stryMutAct_9fa48(\"1324\") ? true : (stryCov_9fa48(\"1324\", \"1325\"), this.useMockData)) {\n        if (stryMutAct_9fa48(\"1326\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1326\");\n          return this.getMockConnection().queryWithParams(sql, params);\n        }\n      }\n      if (stryMutAct_9fa48(\"1329\") ? false : stryMutAct_9fa48(\"1328\") ? true : stryMutAct_9fa48(\"1327\") ? this.connectionEmp : (stryCov_9fa48(\"1327\", \"1328\", \"1329\"), !this.connectionEmp)) {\n        if (stryMutAct_9fa48(\"1330\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1330\");\n          throw new Error(stryMutAct_9fa48(\"1331\") ? \"\" : (stryCov_9fa48(\"1331\"), 'Conexão EMP não inicializada'));\n        }\n      }\n\n      // ✅ NOVO: Instrumentar com métricas\n      return DatabaseMetricsHelper.instrumentQuery(stryMutAct_9fa48(\"1332\") ? \"\" : (stryCov_9fa48(\"1332\"), 'EMP'), sql, stryMutAct_9fa48(\"1333\") ? () => undefined : (stryCov_9fa48(\"1333\"), () => this.connectionEmp!.queryWithParams(sql, params)));\n    }\n  }\n\n  /**\r\n   * Query parametrizada MULT (✅ PROTEGIDO contra SQL Injection)\r\n   * ✅ COM MÉTRICAS\r\n   */\n  static async queryMultWithParams(sql: string, params: QueryParameter[]): Promise<any> {\n    if (stryMutAct_9fa48(\"1334\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1334\");\n      if (stryMutAct_9fa48(\"1336\") ? false : stryMutAct_9fa48(\"1335\") ? true : (stryCov_9fa48(\"1335\", \"1336\"), this.useMockData)) {\n        if (stryMutAct_9fa48(\"1337\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1337\");\n          return this.getMockConnection().queryWithParams(sql, params);\n        }\n      }\n      if (stryMutAct_9fa48(\"1340\") ? false : stryMutAct_9fa48(\"1339\") ? true : stryMutAct_9fa48(\"1338\") ? this.connectionMult : (stryCov_9fa48(\"1338\", \"1339\", \"1340\"), !this.connectionMult)) {\n        if (stryMutAct_9fa48(\"1341\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1341\");\n          throw new Error(stryMutAct_9fa48(\"1342\") ? \"\" : (stryCov_9fa48(\"1342\"), 'Conexão MULT não inicializada'));\n        }\n      }\n\n      // ✅ NOVO: Instrumentar com métricas\n      return DatabaseMetricsHelper.instrumentQuery(stryMutAct_9fa48(\"1343\") ? \"\" : (stryCov_9fa48(\"1343\"), 'MULT'), sql, stryMutAct_9fa48(\"1344\") ? () => undefined : (stryCov_9fa48(\"1344\"), () => this.connectionMult!.queryWithParams(sql, params)));\n    }\n  }\n  private static getMockConnection(): IConnection {\n    if (stryMutAct_9fa48(\"1345\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1345\");\n      return new MockConnection();\n    }\n  }\n  static getConnectionStatus(): ConnectionStatus {\n    if (stryMutAct_9fa48(\"1346\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1346\");\n      return stryMutAct_9fa48(\"1347\") ? {} : (stryCov_9fa48(\"1347\"), {\n        type: this.connectionType,\n        mode: this.useMockData ? stryMutAct_9fa48(\"1348\") ? \"\" : (stryCov_9fa48(\"1348\"), 'MOCK_DATA') : stryMutAct_9fa48(\"1349\") ? \"\" : (stryCov_9fa48(\"1349\"), 'REAL_DATABASE'),\n        error: stryMutAct_9fa48(\"1352\") ? this.connectionError && undefined : stryMutAct_9fa48(\"1351\") ? false : stryMutAct_9fa48(\"1350\") ? true : (stryCov_9fa48(\"1350\", \"1351\", \"1352\"), this.connectionError || undefined)\n      });\n    }\n  }\n  static isReady(): boolean {\n    if (stryMutAct_9fa48(\"1353\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1353\");\n      return this.isInitialized;\n    }\n  }\n  static async close(): Promise<void> {\n    if (stryMutAct_9fa48(\"1354\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1354\");\n      const promises: Promise<void>[] = stryMutAct_9fa48(\"1355\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"1355\"), []);\n      if (stryMutAct_9fa48(\"1357\") ? false : stryMutAct_9fa48(\"1356\") ? true : (stryCov_9fa48(\"1356\", \"1357\"), this.connectionEmp)) {\n        if (stryMutAct_9fa48(\"1358\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1358\");\n          promises.push(this.connectionEmp.close());\n        }\n      }\n      if (stryMutAct_9fa48(\"1360\") ? false : stryMutAct_9fa48(\"1359\") ? true : (stryCov_9fa48(\"1359\", \"1360\"), this.connectionMult)) {\n        if (stryMutAct_9fa48(\"1361\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1361\");\n          promises.push(this.connectionMult.close());\n        }\n      }\n      await Promise.all(promises);\n\n      // ✅ NOVO: Atualizar métricas de conexão\n      DatabaseMetricsHelper.setActiveConnections(stryMutAct_9fa48(\"1362\") ? \"\" : (stryCov_9fa48(\"1362\"), 'EMP'), 0);\n      DatabaseMetricsHelper.setActiveConnections(stryMutAct_9fa48(\"1363\") ? \"\" : (stryCov_9fa48(\"1363\"), 'MULT'), 0);\n      this.connectionEmp = null;\n      this.connectionMult = null;\n      this.isInitialized = stryMutAct_9fa48(\"1364\") ? true : (stryCov_9fa48(\"1364\"), false);\n      console.log(stryMutAct_9fa48(\"1365\") ? \"\" : (stryCov_9fa48(\"1365\"), '🔌 Conexões fechadas'));\n    }\n  }\n\n  // Métodos legados para compatibilidade\n  static getConnectionEmp(): IConnection {\n    if (stryMutAct_9fa48(\"1366\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1366\");\n      if (stryMutAct_9fa48(\"1369\") ? false : stryMutAct_9fa48(\"1368\") ? true : stryMutAct_9fa48(\"1367\") ? this.connectionEmp : (stryCov_9fa48(\"1367\", \"1368\", \"1369\"), !this.connectionEmp)) {\n        if (stryMutAct_9fa48(\"1370\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1370\");\n          throw new Error(stryMutAct_9fa48(\"1371\") ? \"\" : (stryCov_9fa48(\"1371\"), 'Conexão EMP não inicializada'));\n        }\n      }\n      return this.connectionEmp;\n    }\n  }\n  static getConnectionMult(): IConnection {\n    if (stryMutAct_9fa48(\"1372\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1372\");\n      if (stryMutAct_9fa48(\"1375\") ? false : stryMutAct_9fa48(\"1374\") ? true : stryMutAct_9fa48(\"1373\") ? this.connectionMult : (stryCov_9fa48(\"1373\", \"1374\", \"1375\"), !this.connectionMult)) {\n        if (stryMutAct_9fa48(\"1376\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1376\");\n          throw new Error(stryMutAct_9fa48(\"1377\") ? \"\" : (stryCov_9fa48(\"1377\"), 'Conexão MULT não inicializada'));\n        }\n      }\n      return this.connectionMult;\n    }\n  }\n}"],"version":3}