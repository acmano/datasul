{"file":"/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-EFF2bR/src/infrastructure/database/connections/SqlServerConnection.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-EFF2bR/src/infrastructure/database/connections/SqlServerConnection.ts"],"sourcesContent":["// @ts-nocheck\n// src/infrastructure/database/connections/SqlServerConnection.ts\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport sql from 'mssql';\nimport { IConnection, DatabaseConfig, QueryParameter } from '../types';\nimport { log } from '@shared/utils/logger';\nimport { retryWithBackoff, isRetryableError } from '@shared/utils/retry';\nimport { config } from '@config/env.config';\nexport class SqlServerConnection implements IConnection {\n  private pool: sql.ConnectionPool | null = null;\n  private config: DatabaseConfig;\n  private name: string;\n  constructor(config: DatabaseConfig, name: string = stryMutAct_9fa48(\"1611\") ? \"\" : (stryCov_9fa48(\"1611\"), 'SQL Server')) {\n    if (stryMutAct_9fa48(\"1612\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1612\");\n      this.config = config;\n      this.name = name;\n    }\n  }\n  async connect(): Promise<void> {\n    if (stryMutAct_9fa48(\"1613\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1613\");\n      const context = stryMutAct_9fa48(\"1614\") ? `` : (stryCov_9fa48(\"1614\"), `${this.name} (SQL Server)`);\n      log.info(stryMutAct_9fa48(\"1615\") ? `` : (stryCov_9fa48(\"1615\"), `Conectando ${context}...`));\n      log.debug(stryMutAct_9fa48(\"1616\") ? \"\" : (stryCov_9fa48(\"1616\"), '🔍 DEBUG - Config recebida:'), stryMutAct_9fa48(\"1617\") ? {} : (stryCov_9fa48(\"1617\"), {\n        server: this.config.server,\n        user: this.config.user,\n        password: stryMutAct_9fa48(\"1618\") ? \"\" : (stryCov_9fa48(\"1618\"), '*********'),\n        database: this.config.database,\n        port: this.config.port\n      }));\n      const sqlConfig: sql.config = stryMutAct_9fa48(\"1619\") ? {} : (stryCov_9fa48(\"1619\"), {\n        server: stryMutAct_9fa48(\"1622\") ? this.config.server && '' : stryMutAct_9fa48(\"1621\") ? false : stryMutAct_9fa48(\"1620\") ? true : (stryCov_9fa48(\"1620\", \"1621\", \"1622\"), this.config.server || (stryMutAct_9fa48(\"1623\") ? \"Stryker was here!\" : (stryCov_9fa48(\"1623\"), ''))),\n        port: stryMutAct_9fa48(\"1626\") ? this.config.port && 1433 : stryMutAct_9fa48(\"1625\") ? false : stryMutAct_9fa48(\"1624\") ? true : (stryCov_9fa48(\"1624\", \"1625\", \"1626\"), this.config.port || 1433),\n        user: stryMutAct_9fa48(\"1629\") ? this.config.user && '' : stryMutAct_9fa48(\"1628\") ? false : stryMutAct_9fa48(\"1627\") ? true : (stryCov_9fa48(\"1627\", \"1628\", \"1629\"), this.config.user || (stryMutAct_9fa48(\"1630\") ? \"Stryker was here!\" : (stryCov_9fa48(\"1630\"), ''))),\n        password: stryMutAct_9fa48(\"1633\") ? this.config.password && '' : stryMutAct_9fa48(\"1632\") ? false : stryMutAct_9fa48(\"1631\") ? true : (stryCov_9fa48(\"1631\", \"1632\", \"1633\"), this.config.password || (stryMutAct_9fa48(\"1634\") ? \"Stryker was here!\" : (stryCov_9fa48(\"1634\"), ''))),\n        database: stryMutAct_9fa48(\"1637\") ? this.config.database && '' : stryMutAct_9fa48(\"1636\") ? false : stryMutAct_9fa48(\"1635\") ? true : (stryCov_9fa48(\"1635\", \"1636\", \"1637\"), this.config.database || (stryMutAct_9fa48(\"1638\") ? \"Stryker was here!\" : (stryCov_9fa48(\"1638\"), ''))),\n        connectionTimeout: stryMutAct_9fa48(\"1641\") ? this.config.connectionTimeout && 15000 : stryMutAct_9fa48(\"1640\") ? false : stryMutAct_9fa48(\"1639\") ? true : (stryCov_9fa48(\"1639\", \"1640\", \"1641\"), this.config.connectionTimeout || 15000),\n        requestTimeout: stryMutAct_9fa48(\"1644\") ? this.config.requestTimeout && 30000 : stryMutAct_9fa48(\"1643\") ? false : stryMutAct_9fa48(\"1642\") ? true : (stryCov_9fa48(\"1642\", \"1643\", \"1644\"), this.config.requestTimeout || 30000),\n        options: stryMutAct_9fa48(\"1645\") ? {} : (stryCov_9fa48(\"1645\"), {\n          encrypt: stryMutAct_9fa48(\"1646\") ? this.config.encrypt && false : (stryCov_9fa48(\"1646\"), this.config.encrypt ?? (stryMutAct_9fa48(\"1647\") ? true : (stryCov_9fa48(\"1647\"), false))),\n          trustServerCertificate: stryMutAct_9fa48(\"1648\") ? this.config.trustServerCertificate && true : (stryCov_9fa48(\"1648\"), this.config.trustServerCertificate ?? (stryMutAct_9fa48(\"1649\") ? false : (stryCov_9fa48(\"1649\"), true))),\n          enableArithAbort: stryMutAct_9fa48(\"1650\") ? false : (stryCov_9fa48(\"1650\"), true)\n        }),\n        pool: stryMutAct_9fa48(\"1651\") ? {} : (stryCov_9fa48(\"1651\"), {\n          max: 10,\n          min: 0,\n          idleTimeoutMillis: 30000\n        })\n      });\n\n      // ✅ NOVO: Retry com backoff exponencial\n      const retryOptions = stryMutAct_9fa48(\"1652\") ? {} : (stryCov_9fa48(\"1652\"), {\n        maxAttempts: config.database.retry.maxAttempts,\n        initialDelay: config.database.retry.initialDelay,\n        maxDelay: config.database.retry.maxDelay,\n        backoffFactor: config.database.retry.backoffFactor,\n        jitter: stryMutAct_9fa48(\"1653\") ? false : (stryCov_9fa48(\"1653\"), true),\n        onRetry: (error: Error, attempt: number, delay: number) => {\n          if (stryMutAct_9fa48(\"1654\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"1654\");\n            // Só retry em erros de conexão\n            if (stryMutAct_9fa48(\"1657\") ? false : stryMutAct_9fa48(\"1656\") ? true : stryMutAct_9fa48(\"1655\") ? isRetryableError(error) : (stryCov_9fa48(\"1655\", \"1656\", \"1657\"), !isRetryableError(error))) {\n              if (stryMutAct_9fa48(\"1658\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"1658\");\n                log.error(stryMutAct_9fa48(\"1659\") ? `` : (stryCov_9fa48(\"1659\"), `${context}: Erro não-retryable, abortando`), stryMutAct_9fa48(\"1660\") ? {} : (stryCov_9fa48(\"1660\"), {\n                  error: error.message,\n                  attempt\n                }));\n                throw error;\n              }\n            }\n          }\n        }\n      });\n      try {\n        if (stryMutAct_9fa48(\"1661\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1661\");\n          this.pool = await retryWithBackoff(async () => {\n            if (stryMutAct_9fa48(\"1662\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"1662\");\n              const pool = new sql.ConnectionPool(sqlConfig);\n\n              // ✅ CRITICAL: Timeout manual para forçar erro se travar\n              const connectPromise = pool.connect();\n              const timeoutPromise = new Promise<never>((_, reject) => {\n                if (stryMutAct_9fa48(\"1663\")) {\n                  {}\n                } else {\n                  stryCov_9fa48(\"1663\");\n                  setTimeout(() => {\n                    if (stryMutAct_9fa48(\"1664\")) {\n                      {}\n                    } else {\n                      stryCov_9fa48(\"1664\");\n                      reject(new Error(stryMutAct_9fa48(\"1665\") ? `` : (stryCov_9fa48(\"1665\"), `Connection timeout after ${sqlConfig.connectionTimeout}ms`)));\n                    }\n                  }, sqlConfig.connectionTimeout);\n                }\n              });\n\n              // Race: o que resolver/rejeitar primeiro ganha\n              await Promise.race(stryMutAct_9fa48(\"1666\") ? [] : (stryCov_9fa48(\"1666\"), [connectPromise, timeoutPromise]));\n              return pool;\n            }\n          }, retryOptions, context);\n          log.info(stryMutAct_9fa48(\"1667\") ? `` : (stryCov_9fa48(\"1667\"), `${context} conectado`));\n        }\n      } catch (error) {\n        if (stryMutAct_9fa48(\"1668\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1668\");\n          log.error(stryMutAct_9fa48(\"1669\") ? `` : (stryCov_9fa48(\"1669\"), `${context}: Falha após todas as tentativas de retry`), stryMutAct_9fa48(\"1670\") ? {} : (stryCov_9fa48(\"1670\"), {\n            error: error instanceof Error ? error.message : stryMutAct_9fa48(\"1671\") ? \"\" : (stryCov_9fa48(\"1671\"), 'Erro desconhecido'),\n            maxAttempts: retryOptions.maxAttempts\n          }));\n          throw error;\n        }\n      }\n    }\n  }\n  async query(sql: string): Promise<any> {\n    if (stryMutAct_9fa48(\"1672\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1672\");\n      if (stryMutAct_9fa48(\"1675\") ? false : stryMutAct_9fa48(\"1674\") ? true : stryMutAct_9fa48(\"1673\") ? this.pool : (stryCov_9fa48(\"1673\", \"1674\", \"1675\"), !this.pool)) {\n        if (stryMutAct_9fa48(\"1676\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1676\");\n          throw new Error(stryMutAct_9fa48(\"1677\") ? `` : (stryCov_9fa48(\"1677\"), `${this.name}: Pool não inicializado`));\n        }\n      }\n      try {\n        if (stryMutAct_9fa48(\"1678\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1678\");\n          const result = await this.pool.request().query(sql);\n          return result.recordset;\n        }\n      } catch (error) {\n        if (stryMutAct_9fa48(\"1679\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1679\");\n          log.error(stryMutAct_9fa48(\"1680\") ? `` : (stryCov_9fa48(\"1680\"), `${this.name}: Erro na query`), stryMutAct_9fa48(\"1681\") ? {} : (stryCov_9fa48(\"1681\"), {\n            error: error instanceof Error ? error.message : stryMutAct_9fa48(\"1682\") ? \"\" : (stryCov_9fa48(\"1682\"), 'Erro desconhecido'),\n            sql: stryMutAct_9fa48(\"1683\") ? sql : (stryCov_9fa48(\"1683\"), sql.substring(0, 100)) // Log apenas início da query\n          }));\n          throw error;\n        }\n      }\n    }\n  }\n  async queryWithParams(sql: string, params: QueryParameter[]): Promise<any> {\n    if (stryMutAct_9fa48(\"1684\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1684\");\n      if (stryMutAct_9fa48(\"1687\") ? false : stryMutAct_9fa48(\"1686\") ? true : stryMutAct_9fa48(\"1685\") ? this.pool : (stryCov_9fa48(\"1685\", \"1686\", \"1687\"), !this.pool)) {\n        if (stryMutAct_9fa48(\"1688\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1688\");\n          throw new Error(stryMutAct_9fa48(\"1689\") ? `` : (stryCov_9fa48(\"1689\"), `${this.name}: Pool não inicializado`));\n        }\n      }\n      try {\n        if (stryMutAct_9fa48(\"1690\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1690\");\n          const request = this.pool.request();\n\n          // Adicionar parâmetros\n          params.forEach(param => {\n            if (stryMutAct_9fa48(\"1691\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"1691\");\n              const sqlType = this.getSqlType(param.type);\n              request.input(param.name, sqlType, param.value);\n            }\n          });\n          const result = await request.query(sql);\n          return result.recordset;\n        }\n      } catch (error) {\n        if (stryMutAct_9fa48(\"1692\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1692\");\n          log.error(stryMutAct_9fa48(\"1693\") ? `` : (stryCov_9fa48(\"1693\"), `${this.name}: Erro na query parametrizada`), stryMutAct_9fa48(\"1694\") ? {} : (stryCov_9fa48(\"1694\"), {\n            error: error instanceof Error ? error.message : stryMutAct_9fa48(\"1695\") ? \"\" : (stryCov_9fa48(\"1695\"), 'Erro desconhecido'),\n            params: params.map(stryMutAct_9fa48(\"1696\") ? () => undefined : (stryCov_9fa48(\"1696\"), p => stryMutAct_9fa48(\"1697\") ? {} : (stryCov_9fa48(\"1697\"), {\n              name: p.name,\n              type: p.type\n            })))\n          }));\n          throw error;\n        }\n      }\n    }\n  }\n  async close(): Promise<void> {\n    if (stryMutAct_9fa48(\"1698\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1698\");\n      if (stryMutAct_9fa48(\"1700\") ? false : stryMutAct_9fa48(\"1699\") ? true : (stryCov_9fa48(\"1699\", \"1700\"), this.pool)) {\n        if (stryMutAct_9fa48(\"1701\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1701\");\n          await this.pool.close();\n          this.pool = null;\n          log.info(stryMutAct_9fa48(\"1702\") ? `` : (stryCov_9fa48(\"1702\"), `${this.name} desconectado`));\n        }\n      }\n    }\n  }\n  isConnected(): boolean {\n    if (stryMutAct_9fa48(\"1703\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1703\");\n      return stryMutAct_9fa48(\"1706\") ? this.pool === null : stryMutAct_9fa48(\"1705\") ? false : stryMutAct_9fa48(\"1704\") ? true : (stryCov_9fa48(\"1704\", \"1705\", \"1706\"), this.pool !== null);\n    }\n  }\n  async healthCheck(): Promise<{\n    connected: boolean;\n    responseTime: number;\n  }> {\n    if (stryMutAct_9fa48(\"1707\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1707\");\n      const startTime = Date.now();\n      try {\n        if (stryMutAct_9fa48(\"1708\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1708\");\n          if (stryMutAct_9fa48(\"1711\") ? false : stryMutAct_9fa48(\"1710\") ? true : stryMutAct_9fa48(\"1709\") ? this.pool : (stryCov_9fa48(\"1709\", \"1710\", \"1711\"), !this.pool)) {\n            if (stryMutAct_9fa48(\"1712\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"1712\");\n              return stryMutAct_9fa48(\"1713\") ? {} : (stryCov_9fa48(\"1713\"), {\n                connected: stryMutAct_9fa48(\"1714\") ? true : (stryCov_9fa48(\"1714\"), false),\n                responseTime: 0\n              });\n            }\n          }\n          await this.pool.request().query(stryMutAct_9fa48(\"1715\") ? \"\" : (stryCov_9fa48(\"1715\"), 'SELECT 1 AS health'));\n          const responseTime = stryMutAct_9fa48(\"1716\") ? Date.now() + startTime : (stryCov_9fa48(\"1716\"), Date.now() - startTime);\n          return stryMutAct_9fa48(\"1717\") ? {} : (stryCov_9fa48(\"1717\"), {\n            connected: stryMutAct_9fa48(\"1718\") ? false : (stryCov_9fa48(\"1718\"), true),\n            responseTime\n          });\n        }\n      } catch (error) {\n        if (stryMutAct_9fa48(\"1719\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1719\");\n          log.error(stryMutAct_9fa48(\"1720\") ? `` : (stryCov_9fa48(\"1720\"), `${this.name}: Health check falhou`), stryMutAct_9fa48(\"1721\") ? {} : (stryCov_9fa48(\"1721\"), {\n            error: error instanceof Error ? error.message : stryMutAct_9fa48(\"1722\") ? \"\" : (stryCov_9fa48(\"1722\"), 'Erro desconhecido')\n          }));\n          return stryMutAct_9fa48(\"1723\") ? {} : (stryCov_9fa48(\"1723\"), {\n            connected: stryMutAct_9fa48(\"1724\") ? true : (stryCov_9fa48(\"1724\"), false),\n            responseTime: stryMutAct_9fa48(\"1725\") ? Date.now() + startTime : (stryCov_9fa48(\"1725\"), Date.now() - startTime)\n          });\n        }\n      }\n    }\n  }\n  private getSqlType(type: string): any {\n    if (stryMutAct_9fa48(\"1726\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1726\");\n      const typeMap: Record<string, any> = stryMutAct_9fa48(\"1727\") ? {} : (stryCov_9fa48(\"1727\"), {\n        varchar: sql.VarChar,\n        int: sql.Int,\n        bigint: sql.BigInt,\n        float: sql.Float,\n        decimal: sql.Decimal,\n        datetime: sql.DateTime,\n        bit: sql.Bit\n      });\n      return stryMutAct_9fa48(\"1730\") ? typeMap[type.toLowerCase()] && sql.VarChar : stryMutAct_9fa48(\"1729\") ? false : stryMutAct_9fa48(\"1728\") ? true : (stryCov_9fa48(\"1728\", \"1729\", \"1730\"), typeMap[stryMutAct_9fa48(\"1731\") ? type.toUpperCase() : (stryCov_9fa48(\"1731\"), type.toLowerCase())] || sql.VarChar);\n    }\n  }\n}"],"version":3}