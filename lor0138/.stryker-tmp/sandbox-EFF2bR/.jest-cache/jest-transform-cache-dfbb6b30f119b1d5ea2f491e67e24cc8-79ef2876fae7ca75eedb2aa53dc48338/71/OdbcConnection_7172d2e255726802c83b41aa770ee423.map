{"file":"/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-EFF2bR/src/infrastructure/database/connections/OdbcConnection.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-EFF2bR/src/infrastructure/database/connections/OdbcConnection.ts"],"sourcesContent":["// @ts-nocheck\n// src/infrastructure/database/connections/OdbcConnection.ts\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport odbc from 'odbc';\nimport { IConnection, QueryParameter } from '../types';\nimport { log } from '@shared/utils/logger';\nimport { retryWithBackoff, isRetryableError } from '@shared/utils/retry';\nimport { config } from '@config/env.config';\nexport class OdbcConnection implements IConnection {\n  private connection: odbc.Connection | null = null;\n  private connectionString: string;\n  private name: string;\n  constructor(connectionString: string, name: string = stryMutAct_9fa48(\"1536\") ? \"\" : (stryCov_9fa48(\"1536\"), 'ODBC')) {\n    if (stryMutAct_9fa48(\"1537\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1537\");\n      this.connectionString = connectionString;\n      this.name = name;\n    }\n  }\n  async connect(): Promise<void> {\n    if (stryMutAct_9fa48(\"1538\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1538\");\n      const context = stryMutAct_9fa48(\"1539\") ? `` : (stryCov_9fa48(\"1539\"), `${this.name} (ODBC)`);\n      log.info(stryMutAct_9fa48(\"1540\") ? `` : (stryCov_9fa48(\"1540\"), `Conectando ${context}...`));\n\n      // ✅ NOVO: Retry com backoff exponencial\n      const retryOptions = stryMutAct_9fa48(\"1541\") ? {} : (stryCov_9fa48(\"1541\"), {\n        maxAttempts: config.database.retry.maxAttempts,\n        initialDelay: config.database.retry.initialDelay,\n        maxDelay: config.database.retry.maxDelay,\n        backoffFactor: config.database.retry.backoffFactor,\n        jitter: stryMutAct_9fa48(\"1542\") ? false : (stryCov_9fa48(\"1542\"), true),\n        onRetry: (error: Error, attempt: number, delay: number) => {\n          if (stryMutAct_9fa48(\"1543\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"1543\");\n            // Só retry em erros de conexão\n            if (stryMutAct_9fa48(\"1546\") ? false : stryMutAct_9fa48(\"1545\") ? true : stryMutAct_9fa48(\"1544\") ? isRetryableError(error) : (stryCov_9fa48(\"1544\", \"1545\", \"1546\"), !isRetryableError(error))) {\n              if (stryMutAct_9fa48(\"1547\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"1547\");\n                log.error(stryMutAct_9fa48(\"1548\") ? `` : (stryCov_9fa48(\"1548\"), `${context}: Erro não-retryable, abortando`), stryMutAct_9fa48(\"1549\") ? {} : (stryCov_9fa48(\"1549\"), {\n                  error: error.message,\n                  attempt\n                }));\n                throw error;\n              }\n            }\n          }\n        }\n      });\n      try {\n        if (stryMutAct_9fa48(\"1550\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1550\");\n          this.connection = await retryWithBackoff(async () => {\n            if (stryMutAct_9fa48(\"1551\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"1551\");\n              const conn = await odbc.connect(this.connectionString);\n              return conn;\n            }\n          }, retryOptions, context);\n          log.info(stryMutAct_9fa48(\"1552\") ? `` : (stryCov_9fa48(\"1552\"), `${context} conectado`));\n        }\n      } catch (error) {\n        if (stryMutAct_9fa48(\"1553\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1553\");\n          log.error(stryMutAct_9fa48(\"1554\") ? `` : (stryCov_9fa48(\"1554\"), `${context}: Falha após todas as tentativas de retry`), stryMutAct_9fa48(\"1555\") ? {} : (stryCov_9fa48(\"1555\"), {\n            error: error instanceof Error ? error.message : stryMutAct_9fa48(\"1556\") ? \"\" : (stryCov_9fa48(\"1556\"), 'Erro desconhecido'),\n            maxAttempts: retryOptions.maxAttempts\n          }));\n          throw error;\n        }\n      }\n    }\n  }\n  async query(sql: string): Promise<any> {\n    if (stryMutAct_9fa48(\"1557\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1557\");\n      if (stryMutAct_9fa48(\"1560\") ? false : stryMutAct_9fa48(\"1559\") ? true : stryMutAct_9fa48(\"1558\") ? this.connection : (stryCov_9fa48(\"1558\", \"1559\", \"1560\"), !this.connection)) {\n        if (stryMutAct_9fa48(\"1561\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1561\");\n          throw new Error(stryMutAct_9fa48(\"1562\") ? `` : (stryCov_9fa48(\"1562\"), `${this.name}: Conexão não inicializada`));\n        }\n      }\n      try {\n        if (stryMutAct_9fa48(\"1563\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1563\");\n          const result = await this.connection.query(sql);\n          return result;\n        }\n      } catch (error) {\n        if (stryMutAct_9fa48(\"1564\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1564\");\n          log.error(stryMutAct_9fa48(\"1565\") ? `` : (stryCov_9fa48(\"1565\"), `${this.name}: Erro na query`), stryMutAct_9fa48(\"1566\") ? {} : (stryCov_9fa48(\"1566\"), {\n            error: error instanceof Error ? error.message : stryMutAct_9fa48(\"1567\") ? \"\" : (stryCov_9fa48(\"1567\"), 'Erro desconhecido'),\n            sql: stryMutAct_9fa48(\"1568\") ? sql : (stryCov_9fa48(\"1568\"), sql.substring(0, 100))\n          }));\n          throw error;\n        }\n      }\n    }\n  }\n  async queryWithParams(sql: string, params: QueryParameter[]): Promise<any> {\n    if (stryMutAct_9fa48(\"1569\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1569\");\n      if (stryMutAct_9fa48(\"1572\") ? false : stryMutAct_9fa48(\"1571\") ? true : stryMutAct_9fa48(\"1570\") ? this.connection : (stryCov_9fa48(\"1570\", \"1571\", \"1572\"), !this.connection)) {\n        if (stryMutAct_9fa48(\"1573\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1573\");\n          throw new Error(stryMutAct_9fa48(\"1574\") ? `` : (stryCov_9fa48(\"1574\"), `${this.name}: Conexão não inicializada`));\n        }\n      }\n      try {\n        if (stryMutAct_9fa48(\"1575\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1575\");\n          // ODBC usa '?' como placeholder\n          const values = params.map(stryMutAct_9fa48(\"1576\") ? () => undefined : (stryCov_9fa48(\"1576\"), p => p.value));\n          const result = await this.connection.query(sql, values);\n          return result;\n        }\n      } catch (error) {\n        if (stryMutAct_9fa48(\"1577\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1577\");\n          log.error(stryMutAct_9fa48(\"1578\") ? `` : (stryCov_9fa48(\"1578\"), `${this.name}: Erro na query parametrizada`), stryMutAct_9fa48(\"1579\") ? {} : (stryCov_9fa48(\"1579\"), {\n            error: error instanceof Error ? error.message : stryMutAct_9fa48(\"1580\") ? \"\" : (stryCov_9fa48(\"1580\"), 'Erro desconhecido'),\n            params: params.map(stryMutAct_9fa48(\"1581\") ? () => undefined : (stryCov_9fa48(\"1581\"), p => stryMutAct_9fa48(\"1582\") ? {} : (stryCov_9fa48(\"1582\"), {\n              name: p.name,\n              type: p.type\n            })))\n          }));\n          throw error;\n        }\n      }\n    }\n  }\n  async close(): Promise<void> {\n    if (stryMutAct_9fa48(\"1583\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1583\");\n      if (stryMutAct_9fa48(\"1585\") ? false : stryMutAct_9fa48(\"1584\") ? true : (stryCov_9fa48(\"1584\", \"1585\"), this.connection)) {\n        if (stryMutAct_9fa48(\"1586\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1586\");\n          await this.connection.close();\n          this.connection = null;\n          log.info(stryMutAct_9fa48(\"1587\") ? `` : (stryCov_9fa48(\"1587\"), `${this.name} desconectado`));\n        }\n      }\n    }\n  }\n  isConnected(): boolean {\n    if (stryMutAct_9fa48(\"1588\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1588\");\n      return stryMutAct_9fa48(\"1591\") ? this.connection === null : stryMutAct_9fa48(\"1590\") ? false : stryMutAct_9fa48(\"1589\") ? true : (stryCov_9fa48(\"1589\", \"1590\", \"1591\"), this.connection !== null);\n    }\n  }\n  async healthCheck(): Promise<{\n    connected: boolean;\n    responseTime: number;\n  }> {\n    if (stryMutAct_9fa48(\"1592\")) {\n      {}\n    } else {\n      stryCov_9fa48(\"1592\");\n      const startTime = Date.now();\n      try {\n        if (stryMutAct_9fa48(\"1593\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1593\");\n          if (stryMutAct_9fa48(\"1596\") ? false : stryMutAct_9fa48(\"1595\") ? true : stryMutAct_9fa48(\"1594\") ? this.connection : (stryCov_9fa48(\"1594\", \"1595\", \"1596\"), !this.connection)) {\n            if (stryMutAct_9fa48(\"1597\")) {\n              {}\n            } else {\n              stryCov_9fa48(\"1597\");\n              return stryMutAct_9fa48(\"1598\") ? {} : (stryCov_9fa48(\"1598\"), {\n                connected: stryMutAct_9fa48(\"1599\") ? true : (stryCov_9fa48(\"1599\"), false),\n                responseTime: 0\n              });\n            }\n          }\n          await this.connection.query(stryMutAct_9fa48(\"1600\") ? \"\" : (stryCov_9fa48(\"1600\"), 'SELECT 1 AS health'));\n          const responseTime = stryMutAct_9fa48(\"1601\") ? Date.now() + startTime : (stryCov_9fa48(\"1601\"), Date.now() - startTime);\n          return stryMutAct_9fa48(\"1602\") ? {} : (stryCov_9fa48(\"1602\"), {\n            connected: stryMutAct_9fa48(\"1603\") ? false : (stryCov_9fa48(\"1603\"), true),\n            responseTime\n          });\n        }\n      } catch (error) {\n        if (stryMutAct_9fa48(\"1604\")) {\n          {}\n        } else {\n          stryCov_9fa48(\"1604\");\n          log.error(stryMutAct_9fa48(\"1605\") ? `` : (stryCov_9fa48(\"1605\"), `${this.name}: Health check falhou`), stryMutAct_9fa48(\"1606\") ? {} : (stryCov_9fa48(\"1606\"), {\n            error: error instanceof Error ? error.message : stryMutAct_9fa48(\"1607\") ? \"\" : (stryCov_9fa48(\"1607\"), 'Erro desconhecido')\n          }));\n          return stryMutAct_9fa48(\"1608\") ? {} : (stryCov_9fa48(\"1608\"), {\n            connected: stryMutAct_9fa48(\"1609\") ? true : (stryCov_9fa48(\"1609\"), false),\n            responseTime: stryMutAct_9fa48(\"1610\") ? Date.now() + startTime : (stryCov_9fa48(\"1610\"), Date.now() - startTime)\n          });\n        }\n      }\n    }\n  }\n}"],"version":3}