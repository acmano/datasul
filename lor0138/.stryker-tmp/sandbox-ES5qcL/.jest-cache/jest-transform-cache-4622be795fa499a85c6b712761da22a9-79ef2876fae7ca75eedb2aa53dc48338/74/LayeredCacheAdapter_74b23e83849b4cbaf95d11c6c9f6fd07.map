{"file":"/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-ES5qcL/src/shared/utils/cache/LayeredCacheAdapter.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/.stryker-tmp/sandbox-ES5qcL/src/shared/utils/cache/LayeredCacheAdapter.ts"],"sourcesContent":["// @ts-nocheck\n// src/shared/utils/cache/LayeredCacheAdapter.ts\n\nimport { CacheAdapter } from './CacheAdapter';\nimport { log } from '../logger';\n\n/**\n * Adaptador de cache em camadas (L1 + L2)\n * \n * Estrat√©gia:\n * 1. GET: Busca L1 ‚Üí L2 ‚Üí Banco (promove L2‚ÜíL1 em hit)\n * 2. SET: Armazena L1 + L2 simultaneamente\n * 3. DELETE: Remove de L1 + L2\n * \n * Benef√≠cios:\n * - Performance m√°xima (L1 mem√≥ria)\n * - Compartilhamento entre servidores (L2 Redis)\n * - Redund√¢ncia (fallback L1‚ÜîL2)\n */\nexport class LayeredCacheAdapter implements CacheAdapter {\n  private l1: CacheAdapter; // Mem√≥ria (r√°pido, local)\n  private l2: CacheAdapter; // Redis (compartilhado, persistente)\n  private name: string;\n\n  // Estat√≠sticas\n  private stats = {\n    l1Hits: 0,\n    l1Misses: 0,\n    l2Hits: 0,\n    l2Misses: 0,\n    totalHits: 0,\n    totalMisses: 0\n  };\n\n  constructor(l1: CacheAdapter, l2: CacheAdapter, name: string = 'Layered') {\n    this.l1 = l1;\n    this.l2 = l2;\n    this.name = name;\n\n    log.info(`${this.name} cache inicializado (L1 + L2)`);\n  }\n\n  async get<T>(key: string): Promise<T | undefined> {\n    try {\n      // 1Ô∏è‚É£ Tenta L1 (mem√≥ria)\n      const l1Value = await this.l1.get<T>(key);\n      \n      if (l1Value !== undefined) {\n        this.stats.l1Hits++;\n        this.stats.totalHits++;\n        log.debug(`${this.name} L1 HIT`, { key });\n        return l1Value;\n      }\n\n      this.stats.l1Misses++;\n\n      // 2Ô∏è‚É£ Tenta L2 (Redis)\n      const l2Value = await this.l2.get<T>(key);\n\n      if (l2Value !== undefined) {\n        this.stats.l2Hits++;\n        this.stats.totalHits++;\n        log.debug(`${this.name} L2 HIT`, { key });\n\n        // üîº PROMOVE para L1 (pr√≥xima leitura ser√° mais r√°pida)\n        await this.l1.set(key, l2Value).catch(err => {\n          log.warn(`${this.name} falha ao promover para L1`, { key, error: err });\n        });\n\n        return l2Value;\n      }\n\n      this.stats.l2Misses++;\n      this.stats.totalMisses++;\n      log.debug(`${this.name} MISS (L1 e L2)`, { key });\n\n      return undefined;\n    } catch (error) {\n      log.error(`${this.name} GET error`, { key, error });\n      return undefined;\n    }\n  }\n\n  async set<T>(key: string, value: T, ttl?: number): Promise<boolean> {\n    try {\n      // Armazena em AMBAS as camadas simultaneamente\n      const [l1Success, l2Success] = await Promise.allSettled([\n        this.l1.set(key, value, ttl),\n        this.l2.set(key, value, ttl)\n      ]);\n\n      const l1Ok = l1Success.status === 'fulfilled' && l1Success.value;\n      const l2Ok = l2Success.status === 'fulfilled' && l2Success.value;\n\n      if (!l1Ok) {\n        log.warn(`${this.name} falha L1 SET`, { key });\n      }\n      if (!l2Ok) {\n        log.warn(`${this.name} falha L2 SET`, { key });\n      }\n\n      log.debug(`${this.name} SET`, { \n        key, \n        ttl, \n        l1: l1Ok ? 'OK' : 'FAIL', \n        l2: l2Ok ? 'OK' : 'FAIL' \n      });\n\n      // Considera sucesso se pelo menos uma camada funcionou\n      return l1Ok || l2Ok;\n    } catch (error) {\n      log.error(`${this.name} SET error`, { key, error });\n      return false;\n    }\n  }\n\n  async delete(key: string): Promise<number> {\n    try {\n      // Remove de AMBAS as camadas\n      const [l1Deleted, l2Deleted] = await Promise.allSettled([\n        this.l1.delete(key),\n        this.l2.delete(key)\n      ]);\n\n      const l1Count = l1Deleted.status === 'fulfilled' ? l1Deleted.value : 0;\n      const l2Count = l2Deleted.status === 'fulfilled' ? l2Deleted.value : 0;\n\n      const total = l1Count + l2Count;\n\n      log.debug(`${this.name} DELETE`, { \n        key, \n        l1: l1Count, \n        l2: l2Count, \n        total \n      });\n\n      return total;\n    } catch (error) {\n      log.error(`${this.name} DELETE error`, { key, error });\n      return 0;\n    }\n  }\n\n  async flush(): Promise<void> {\n    try {\n      // Limpa AMBAS as camadas\n      await Promise.allSettled([\n        this.l1.flush(),\n        this.l2.flush()\n      ]);\n\n      log.info(`${this.name} FLUSH ALL (L1 + L2)`);\n\n      // Reseta estat√≠sticas\n      this.stats = {\n        l1Hits: 0,\n        l1Misses: 0,\n        l2Hits: 0,\n        l2Misses: 0,\n        totalHits: 0,\n        totalMisses: 0\n      };\n    } catch (error) {\n      log.error(`${this.name} FLUSH error`, { error });\n    }\n  }\n\n  async keys(pattern?: string): Promise<string[]> {\n    try {\n      // Retorna UNI√ÉO de L1 + L2 (sem duplicatas)\n      const [l1Keys, l2Keys] = await Promise.allSettled([\n        this.l1.keys(pattern),\n        this.l2.keys(pattern)\n      ]);\n\n      const l1List = l1Keys.status === 'fulfilled' ? l1Keys.value : [];\n      const l2List = l2Keys.status === 'fulfilled' ? l2Keys.value : [];\n\n      // Remove duplicatas\n      const uniqueKeys = [...new Set([...l1List, ...l2List])];\n\n      log.debug(`${this.name} KEYS`, { \n        pattern, \n        l1: l1List.length, \n        l2: l2List.length, \n        total: uniqueKeys.length \n      });\n\n      return uniqueKeys;\n    } catch (error) {\n      log.error(`${this.name} KEYS error`, { pattern, error });\n      return [];\n    }\n  }\n\n  async isReady(): Promise<boolean> {\n    try {\n      const [l1Ready, l2Ready] = await Promise.all([\n        this.l1.isReady(),\n        this.l2.isReady()\n      ]);\n\n      // Considera pronto se pelo menos L1 estiver OK\n      return l1Ready;\n    } catch (error) {\n      log.error(`${this.name} isReady error`, { error });\n      return false;\n    }\n  }\n\n  async close(): Promise<void> {\n    try {\n      await Promise.allSettled([\n        this.l1.close(),\n        this.l2.close()\n      ]);\n\n      log.info(`${this.name} fechado (L1 + L2)`);\n    } catch (error) {\n      log.error(`${this.name} CLOSE error`, { error });\n    }\n  }\n\n  /**\n   * Retorna estat√≠sticas do cache em camadas\n   */\n  getStats() {\n    const l1HitRate = this.stats.l1Hits + this.stats.l1Misses > 0\n      ? (this.stats.l1Hits / (this.stats.l1Hits + this.stats.l1Misses)) * 100\n      : 0;\n\n    const l2HitRate = this.stats.l2Hits + this.stats.l2Misses > 0\n      ? (this.stats.l2Hits / (this.stats.l2Hits + this.stats.l2Misses)) * 100\n      : 0;\n\n    const totalHitRate = this.stats.totalHits + this.stats.totalMisses > 0\n      ? (this.stats.totalHits / (this.stats.totalHits + this.stats.totalMisses)) * 100\n      : 0;\n\n    return {\n      l1: {\n        hits: this.stats.l1Hits,\n        misses: this.stats.l1Misses,\n        hitRate: l1HitRate.toFixed(2) + '%'\n      },\n      l2: {\n        hits: this.stats.l2Hits,\n        misses: this.stats.l2Misses,\n        hitRate: l2HitRate.toFixed(2) + '%'\n      },\n      total: {\n        hits: this.stats.totalHits,\n        misses: this.stats.totalMisses,\n        hitRate: totalHitRate.toFixed(2) + '%'\n      }\n    };\n  }\n\n  /**\n   * Reseta estat√≠sticas\n   */\n  resetStats(): void {\n    this.stats = {\n      l1Hits: 0,\n      l1Misses: 0,\n      l2Hits: 0,\n      l2Misses: 0,\n      totalHits: 0,\n      totalMisses: 0\n    };\n\n    log.info(`${this.name} estat√≠sticas resetadas`);\n  }\n}"],"version":3}