{"file":"/home/mano/projetos/datasul/lor0138/src/shared/utils/logger.ts","mappings":"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","names":[],"sources":["/home/mano/projetos/datasul/lor0138/src/shared/utils/logger.ts"],"sourcesContent":["// src/shared/utils/logger.ts\n\nimport winston from 'winston';\nimport DailyRotateFile from 'winston-daily-rotate-file';\nimport path from 'path';\nimport fs from 'fs';\n\nconst logDir = 'logs';\n\n// Cria diretório de logs se não existir\nif (!fs.existsSync(logDir)) {\n  fs.mkdirSync(logDir, { recursive: true });\n}\n\n// Formatos customizados\nconst logFormat = winston.format.combine(\n  winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),\n  winston.format.errors({ stack: true }),\n  winston.format.splat(),\n  winston.format.json()\n);\n\n// Formato para console (mais legível)\nconst consoleFormat = winston.format.combine(\n  winston.format.colorize(),\n  winston.format.timestamp({ format: 'HH:mm:ss' }),\n  winston.format.printf(({ timestamp, level, message, ...meta }) => {\n    let msg = `${timestamp} [${level}] ${message}`;\n    if (Object.keys(meta).length > 0) {\n      msg += ` ${JSON.stringify(meta)}`;\n    }\n    return msg;\n  })\n);\n\n// Transportes (onde os logs vão)\nconst transports: winston.transport[] = [\n  // Console (sempre ativo)\n  new winston.transports.Console({\n    format: consoleFormat,\n    level: process.env.LOG_LEVEL || 'info',\n  }),\n];\n\n// ✅ MUDANÇA: Logs em arquivo também em desenvolvimento\nif (process.env.NODE_ENV !== 'test') {\n  // Logs de erro em arquivo separado\n  transports.push(\n    new DailyRotateFile({\n      filename: path.join(logDir, 'error-%DATE%.log'),\n      datePattern: 'YYYY-MM-DD',\n      level: 'error',\n      maxSize: '20m',\n      maxFiles: '30d',\n      format: logFormat,\n    })\n  );\n\n  // Todos os logs combinados\n  transports.push(\n    new DailyRotateFile({\n      filename: path.join(logDir, 'app-%DATE%.log'),\n      datePattern: 'YYYY-MM-DD',\n      maxSize: '20m',\n      maxFiles: '14d',\n      format: logFormat,\n    })\n  );\n}\n\n// Cria o logger\nconst logger = winston.createLogger({\n  level: process.env.LOG_LEVEL || 'info',\n  format: logFormat,\n  transports,\n  exitOnError: false,\n});\n\n// Helper para adicionar contexto às mensagens\nexport interface LogContext {\n  requestId?: string;\n  userId?: string;\n  itemCodigo?: string;\n  ip?: string;\n  method?: string;\n  url?: string;\n  statusCode?: number;\n  duration?: number;\n  [key: string]: any;\n}\n\n// Funções auxiliares tipadas\nexport const log = {\n  error: (message: string, context?: LogContext) => {\n    logger.error(message, context);\n  },\n\n  warn: (message: string, context?: LogContext) => {\n    logger.warn(message, context);\n  },\n\n  info: (message: string, context?: LogContext) => {\n    logger.info(message, context);\n  },\n\n  http: (message: string, context?: LogContext) => {\n    logger.http(message, context);\n  },\n\n  debug: (message: string, context?: LogContext) => {\n    logger.debug(message, context);\n  },\n};\n\nexport default logger;"],"version":3}